[{"path":"https://jthomasmock.github.io/gtExtras/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Thomas Mock Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"graphs-vs-tables","dir":"Articles","previous_headings":"","what":"Graphs vs Tables","title":"Plotting with gtExtras","text":"Per Stephen book, Show Numbers: difference Tables Graphs: Tables: Display used look compare individual values Graphs: Display used reveal relationships among whole sets values overall shape typically reach graphing tools whenever want tell story data, likely underutilizing tables. can merge graphs tables often get best worlds.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"get-started","dir":"Articles","previous_headings":"","what":"Get started","title":"Plotting with gtExtras","text":"can first load libraries.","code":"library(gt) library(gtExtras) library(dplyr, warn.conflicts =  FALSE) library(ggplot2)"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"sparklines","dir":"Articles","previous_headings":"Get started","what":"Sparklines","title":"Plotting with gtExtras","text":"Per Wikipedia: sparkline small line chart, typically drawn without axes coordinates. presents general shape variation (typically time) measurement, temperature stock market price, simple highly condensed way. 1999 screenshot implementation sparklines developed around January 1998. concept developed interaction designer Peter Zelchenko conversation programmer Michael Medved, Medved developing QuoteTracker application. product later sold Ameritrade. can use gtExtras::gt_plt_sparkline() add inline sparkline quickly. necessary prep step first convert long data format summarized data format, row represents one “group” data column now vector values. using summarize(list_data = list(col_name)) can create list-column data group.","code":"mtcars %>%    head() #>                    mpg cyl disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1 car_summary <- mtcars %>%   dplyr::group_by(cyl) %>%      dplyr::summarize(     mean = mean(mpg),     sd = sd(mpg),     # must end up with list of data for each row in the input dataframe     mpg_data = list(mpg),     .groups = \"drop\"   )  car_summary #> # A tibble: 3 × 4 #>     cyl  mean    sd mpg_data   #>   <dbl> <dbl> <dbl> <list>     #> 1     4  26.7  4.51 <dbl [11]> #> 2     6  19.7  1.45 <dbl [7]>  #> 3     8  15.1  2.56 <dbl [14]> car_summary %>%   arrange(desc(cyl)) %>%    gt() %>%   gtExtras::gt_plt_sparkline(mpg_data) %>%   fmt_number(columns = mean:sd, decimals = 1)"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"sparkline-alternatives","dir":"Articles","previous_headings":"Get started","what":"Sparkline alternatives","title":"Plotting with gtExtras","text":"can also plot density-plot histogram instead just line plot, note ’ve switched gt_plt_dist() since ’re plotting true distribution now.","code":"car_summary %>%   arrange(desc(cyl)) %>%    gt() %>%   gtExtras::gt_plt_dist(mpg_data, type = \"density\", line_color = \"blue\",                           fill_color = \"red\") %>%   fmt_number(columns = mean:sd, decimals = 1) car_summary %>%   arrange(desc(cyl)) %>%    gt() %>%   gtExtras::gt_plt_dist(mpg_data, type = \"histogram\", line_color = \"purple\",                           fill_color = \"green\", bw = 4) %>%   fmt_number(columns = mean:sd, decimals = 1)"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"inline-bars","dir":"Articles","previous_headings":"Get started","what":"Inline bars","title":"Plotting with gtExtras","text":"can also generate ggplot2 created bar plots inline. Note keep_column allows keep raw values plot inline.","code":"mtcars %>%   dplyr::select(cyl:wt, mpg) %>%    head() %>%   gt() %>%   gt_plt_bar(column = mpg, keep_column = TRUE, width = 35)"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"percent-bars","dir":"Articles","previous_headings":"Get started","what":"Percent bars","title":"Plotting with gtExtras","text":"Alternatively, may prefer HTML-generated bar plotsfrom gt_plt_bar_pct(). Note bars represent percentage max, largest value indicate 100% row. can pass raw values scaled 0-100% range, pass values 0 100 represent existing percent.","code":"mtcars %>%    head() %>%    dplyr::select(cyl, mpg) %>%    dplyr::mutate(mpg_pct_max = round(mpg/max(mpg) * 100, digits = 2),                  mpg_scaled = mpg/max(mpg) * 100) %>%    dplyr::mutate(mpg_unscaled = mpg) %>%    gt() %>%    gt_plt_bar_pct(column = mpg_scaled, scaled = TRUE) %>%    gt_plt_bar_pct(column = mpg_unscaled, scaled = FALSE,                   fill = \"blue\", background = \"lightblue\") %>%    cols_align(\"center\", contains(\"scale\")) %>%    cols_width(4 ~ px(125),               5 ~ px(125))"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"inline-win-loss-plots","dir":"Articles","previous_headings":"Get started","what":"Inline Win Loss plots","title":"Plotting with gtExtras","text":"can also generate really nice looking “Win Loss” plots, similar ones used Guardian Soccer outcomes. code bring data via nflreadr package hidden expandable tab . Bring data Note list-column outcomes team. now can generate example table!","code":"library(dplyr)  games_df <- nflreadr::load_schedules() %>%   filter(season == 2020, game_type == \"REG\") %>%   select(game_id, team_home = home_team, team_away = away_team, result, week) %>%   tidyr::pivot_longer(contains('team'), names_to = 'home_away', values_to = 'team', names_prefix = 'team_') %>%   mutate(     result = ifelse(home_away == 'home', result, -result),     win = ifelse(result == 0 , 0.5, ifelse(result > 0, 1, 0))   ) %>%   select(week, team, win) %>%   mutate(     team = case_when(       team == 'STL' ~ 'LA',       team == 'OAK' ~ 'LV',       team == 'SD' ~ 'LAC',       T ~ team     )   )  team_df <- nflreadr::load_teams() %>%   select(team_wordmark, team_abbr, team_conf, team_division)  joined_df <- games_df %>%   group_by(team) %>%   summarise(     Wins = length(win[win==1]),     Losses = length(win[win==0]),     outcomes = list(win), .groups = \"drop\") %>%   left_join(team_df, by = c(\"team\" = \"team_abbr\")) %>%   select(team_wordmark, team_conf, team_division, Wins:outcomes)  final_df <- joined_df %>%   filter(team_conf == \"AFC\") %>%   group_by(team_division) %>%   arrange(desc(Wins)) %>%   ungroup() %>%   arrange(team_division) %>%   select(-team_conf) %>%   mutate(team_division = stringr::str_remove(team_division, \"AFC |NFC \")) %>%   mutate(     team_division = factor(team_division,       levels = c(\"North\", \"South\", \"East\", \"West\")       )     ) %>%   arrange(team_division) glimpse(final_df) #> Rows: 16 #> Columns: 5 #> $ team_wordmark <chr> \"https://github.com/nflverse/nflfastR-data/raw/master/wo… #> $ team_division <chr> \"North\", \"North\", \"North\", \"North\", \"South\", \"South\", \"S… #> $ Wins          <int> 12, 11, 11, 4, 11, 11, 4, 1, 13, 10, 7, 2, 14, 8, 7, 5 #> $ Losses        <int> 4, 5, 5, 11, 5, 5, 12, 15, 3, 6, 9, 14, 2, 8, 9, 11 #> $ outcomes      <list> <1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0>, <1, 1,… final_df %>%   gt(groupname_col = \"team_division\") %>%   cols_label(team_wordmark = \"\") %>%   cols_align(\"left\", team_division) %>%   gtExtras::gt_plt_winloss(outcomes, max_wins = 16, type = \"pill\") %>%   gtExtras::gt_img_rows(columns = team_wordmark, height = 20) %>%   gtExtras::gt_theme_538() %>%   tab_header(     title = gtExtras::add_text_img(       \"2020 Results by Division\",       url = \"https://github.com/nflverse/nflfastR-data/raw/master/AFC.png\",       height = 30     )   ) %>%   tab_options(data_row.padding = px(2))"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"inline-bar-plots","dir":"Articles","previous_headings":"Get started","what":"Inline bar plots","title":"Plotting with gtExtras","text":"can also inline bar plots, purely via HTML! can customize colors, option scale use unscaled values.","code":"gt_bar_plot_tab <- mtcars %>%   head() %>%   dplyr::select(cyl, mpg) %>%   dplyr::mutate(     mpg_pct_max = round(mpg / max(mpg) * 100, digits = 2),     mpg_scaled = mpg / max(mpg) * 100   ) %>%   dplyr::mutate(mpg_unscaled = mpg) %>%   gt() %>%   gt_plt_bar_pct(column = mpg_scaled, scaled = TRUE) %>%   gt_plt_bar_pct(column = mpg_unscaled, scaled = FALSE, fill = \"blue\", background = \"lightblue\") %>%   cols_align(\"center\", contains(\"scale\")) %>%   cols_width(     4 ~ px(125),     5 ~ px(125)   )  gt_bar_plot_tab"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"stacked-percent-bar-charts","dir":"Articles","previous_headings":"Get started","what":"Stacked Percent bar charts","title":"Plotting with gtExtras","text":"can create horizontal stacked percent bar chart inline like . data can prepped seen expandable section .","code":"library(dplyr) library(tidyr) library(gt)  player_df <- tibble(   player = c(     \"Evan Mobley\",     \"Sandro Mamukelashvili\",     \"Charles Bassey\",     \"Luke Garza\",     \"Moses Wright\",     \"Neemias Queta\",     \"Isaiah Jackson\",     \"Day'Ron Sharpe\"   ),   team = c(     \"USC\", \"Seton Hall\", \"Western Kentucky\",     \"Iowa\", \"Georgia Tech\", \"Utah St\", \"Kentucky\",     \"North Carolina\"   ),   ht = c(     \"7'0\\\"\",     \"6'10\\\"\",     \"6'10\\\"\",     \"6'11\\\"\",     \"6'9\\\"\",     \"7'1\\\"\",     \"6'11\\\"\",     \"6'10\\\"\"   ),   dk_pct_time = c(40, 48, 50, 50, 51, 55, 60, 66),   dk_pps = c(1.62, 1.02, 1.54,1.33,1.46,1.37,1.33,1.18),   tip_pct_time = c(26, 10, 19, 15, 25, 27, 15, 24),   tip_pps = c(0.88, .97,1,1.05, .63, .85, .76, .84),   jmp_pct_time = c(33, 42, 31, 35, 25, 18, 25, 10),   jmp_pps = c(.91, .91, .78, 1.04, .86, .74, .71, .42) ) %>%   left_join(     tibble(       player = c(         \"Evan Mobley\",         \"Sandro Mamukelashvili\",         \"Charles Bassey\",         \"Luke Garza\",         \"Moses Wright\",         \"Neemias Queta\",         \"Isaiah Jackson\",         \"Day'Ron Sharpe\"       ) %>% rep(each = 3),       shot_type = c(\"Dunks + Lays\", \"Hooks + Floats\", \"Jumpers\") %>% rep(8)     ) %>%       mutate(         shot_type = factor(shot_type, levels = c(\"Jumpers\", \"Hooks + Floats\", \"Dunks + Lays\")),         shot_mix = c(           40, 26, 33,           48, 10, 42,           50, 19, 31,           50, 15, 35,           51, 25, 25,           55, 27, 18,           60, 15, 25,           66, 24, 10         )       ),     by = \"player\"   ) basic_tb <- player_df %>%   group_by(player) %>%   summarize(dunks = shot_mix[1], list_data = list(shot_mix)) %>%   arrange(dunks) %>%   gt() basic_tb %>%   gt_plt_bar_stack(list_data, width = 65,                    labels = c(\"DUNKS\", \"HOOKS/FLOATS\", \"JUMPERS\"),                    palette= c(\"#ff4343\", \"#bfbfbf\", \"#0a1c2b\")) %>%   gt_theme_538()"},{"path":"https://jthomasmock.github.io/gtExtras/articles/plotting-with-gtExtras.html","id":"bullet-chart","dir":"Articles","previous_headings":"Get started","what":"Bullet chart","title":"Plotting with gtExtras","text":"’s also option create bullet charts represent core value target metric. representative diagram bullet chart, ’s specific target value represented vertical line core value represented thin bar plot. Note now, want use gt::fmt_ functions column interest, ’ll need create duplicate column ahead time.","code":"set.seed(37)  bullet_df <- tibble::rownames_to_column(mtcars) %>%  dplyr::select(rowname, cyl:drat, mpg) %>%  dplyr::group_by(cyl) %>%  dplyr::mutate(target_col = mean(mpg)) %>%  dplyr::slice_sample(n = 3) %>%  dplyr::ungroup()   bullet_df %>%  gt() %>%  gt_plt_bullet(column = mpg, target = target_col, width = 45,                palette = c(\"lightblue\", \"black\")) bullet_df %>%   dplyr::mutate(plot_column = mpg) %>%   gt() %>%   gt_plt_bullet(column = plot_column, target = target_col, width = 45) %>%   fmt_number(mpg, decimals = 1)"},{"path":"https://jthomasmock.github.io/gtExtras/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thomas Mock. Author, maintainer, copyright holder. Daniel D. Sjoberg. Contributor.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mock T (2022). gtExtras: Extending 'gt' Beautiful HTML Tables. https://github.com/jthomasmock/gtExtras, https://jthomasmock.github.io/gtExtras/.","code":"@Manual{,   title = {gtExtras: Extending 'gt' for Beautiful HTML Tables},   author = {Thomas Mock},   year = {2022},   note = {https://github.com/jthomasmock/gtExtras, https://jthomasmock.github.io/gtExtras/}, }"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"gtextras-","dir":"","previous_headings":"","what":"Additional features for creating beautiful tables with gt","title":"Additional features for creating beautiful tables with gt","text":"goal gtExtras provide additional helper functions assist creating beautiful tables gt. functions generally wrappers around boilerplate adding capabilities currently yet built gt. {gt} package amazing, make sure go read official documentation.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Additional features for creating beautiful tables with gt","text":"","code":"install.packages(\"gtExtras\")"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"Additional features for creating beautiful tables with gt","text":"get bug fix use feature development version, can install development version gtExtras GitHub four families functions gtExtras: Themes: 7 themes style almost every element gt table, built data journalism-styled tables Utilities: Helper functions aligning/padding numbers, adding fontawesome icons, images, highlighting, dividers, styling group, creating two tables two column layouts, extracting ordered data gt table internals, generating random dataset reprex Plotting: 12 plotting functions inline sparklines, win-loss charts, distributions (density/histogram), percentiles, dot + bar, bar charts, confidence intervals, summarizing entire dataframe! Colors: 3 functions, palette “Hulk” style scale (purple/green), coloring rows good defaults, adding “color box” along cell value Also see Plotting gtExtras article examples combining tables graphics together. subset functions included , see full function reference.","code":"# if needed install.packages(\"remotes\") remotes::install_github(\"jthomasmock/gtExtras\")"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"themes","dir":"","previous_headings":"Development version","what":"Themes","title":"Additional features for creating beautiful tables with gt","text":"package includes seven different themes, 3 examples gt_theme_538() styled FiveThirtyEight style tables, gt_theme_espn() styled ESPN style tables, gt_theme_nytimes() styled New York Times tables.","code":"head(mtcars) %>%   gt() %>%    gt_theme_538() head(mtcars) %>%   gt() %>%    gt_theme_espn() head(mtcars) %>%    gt() %>%    gt_theme_nytimes() %>%    tab_header(title = \"Table styled like the NY Times\")"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"hulk-data_color","dir":"","previous_headings":"Development version","what":"Hulk data_color","title":"Additional features for creating beautiful tables with gt","text":"opinionated diverging color palette. diverges low high purple green. good alternative red-green diverging palette color-blind friendly palette. specific colors come colorbrewer2. Basic usage , specific column passed.  Trim provides tighter range purple/green colors less pronounced.  Reverse makes higher values represented purple lower green. default high = green, low = purple.","code":"# basic use head(mtcars) %>%   gt::gt() %>%   gt_hulk_col_numeric(mpg) head(mtcars) %>%   gt::gt() %>%   # trim gives smaller range of colors   # so the green and purples are not as dark   gt_hulk_col_numeric(mpg:disp, trim = TRUE) # option to reverse the color palette # so that purple is higher head(mtcars) %>%   gt::gt() %>%   # reverse = green for low, purple for high   gt_hulk_col_numeric(mpg:disp, reverse = FALSE)"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"gt_color_rows","dir":"","previous_headings":"Development version","what":"gt_color_rows()","title":"Additional features for creating beautiful tables with gt","text":"gt_color_rows() function thin boilerplate wrapper around gt::data_color(). ’s simpler use still provides rich color choices thanks inclusion paletteer::paletteer_d(). can provide 100s discrete (ie categorical) continuous color palettes.  can change specific palette palette = \"package_name::palette_name\"  can also use custom-defined palettes named colors R hex color values.  Lastly, can also provide categorical discrete data colored.","code":"# basic use mtcars %>%   head() %>%   gt() %>%   gt_color_rows(mpg:disp) # recognizes all of the dynamic palettes from paletteer mtcars %>%   head() %>%   gt() %>%   gt_color_rows(mpg:disp, palette = \"ggsci::blue_material\") mtcars %>%   head() %>%   gt() %>%   gt_color_rows(mpg:disp, palette = c(\"white\", \"green\"))     # could also use palette = c(\"#ffffff\", \"##00FF00\") # provide type = \"discrete\" mtcars %>%   head() %>%   gt() %>%   gt_color_rows(     cyl,      palette = \"ggthemes::colorblind\",      # note that you can manually define range like c(4, 6, 8)     domain = range(mtcars$cyl),     pal_type = \"discrete\"    )"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"gt_highlight_rows","dir":"","previous_headings":"Development version","what":"gt_highlight_rows()","title":"Additional features for creating beautiful tables with gt","text":"provides ability highlight optionally bold entire rows within existing gt table. Basic use defaults light-blue highlight can changed fill argument.  can optionally specify target column target_col bold, rest row’s text default weight.","code":"head(mtcars[,1:5]) %>%    tibble::rownames_to_column(\"car\") %>%    gt() %>%    gt_highlight_rows(rows = 2, font_weight = \"normal\") head(mtcars[,1:5]) %>%    tibble::rownames_to_column(\"car\") %>%    gt() %>%    gt_highlight_rows(     rows = 5,      fill = \"lightgrey\",     bold_target_only = TRUE,     target_col = car     )"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"gt_sparkline","dir":"","previous_headings":"Development version","what":"gt_sparkline()","title":"Additional features for creating beautiful tables with gt","text":"","code":"mtcars %>%    dplyr::group_by(cyl) %>%    # must end up with list of data for each row in the input dataframe    dplyr::summarize(mpg_data = list(mpg), .groups = \"drop\") %>%    gt() %>%    gt_plt_sparkline(mpg_data)"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"gt_bar_plot","dir":"","previous_headings":"Development version","what":"gt_bar_plot()","title":"Additional features for creating beautiful tables with gt","text":"gt_bar_plot function takes existing gt_tbl object adds horizontal barplots via native HTML. wrapper around raw HTML strings, gt::text_transform() gt::cols_align(). Note values default normalized percent maximum observed value specified column. can turn values already represent percentage value representing 0-100.","code":"mtcars %>%   head() %>%   dplyr::select(cyl, mpg) %>%   dplyr::mutate(mpg_pct_max = round(mpg/max(mpg) * 100, digits = 2),                 mpg_scaled = mpg/max(mpg) * 100) %>%   dplyr::mutate(mpg_unscaled = mpg) %>%   gt() %>%   gt_plt_bar_pct(column = mpg_scaled, scaled = TRUE) %>%   gt_plt_bar_pct(column = mpg_unscaled, scaled = FALSE, fill = \"blue\", background = \"lightblue\") %>%   cols_align(\"center\", contains(\"scale\")) %>%   cols_width(4 ~ px(125),              5 ~ px(125))"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"gt_merge_stack","dir":"","previous_headings":"Development version","what":"gt_merge_stack()","title":"Additional features for creating beautiful tables with gt","text":"gt_merge_stack() function takes existing gt table merges column 1 column 2, stacking column 1’s text top column 2’s. Top text caps black bold text, lower text smaller dark grey.","code":"team_df <- readRDS(url(\"https://github.com/nflverse/nflfastR-data/raw/master/teams_colors_logos.rds\"))  team_df %>%   dplyr::select(team_nick, team_abbr, team_conf, team_division, team_wordmark) %>%   head(8) %>%   gt(groupname_col = \"team_conf\") %>%   gt_merge_stack(col1 = team_nick, col2 = team_division) %>%   gt_img_rows(team_wordmark)"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"gt_plt_winloss","dir":"","previous_headings":"Development version","what":"gt_plt_winloss()","title":"Additional features for creating beautiful tables with gt","text":"function takes list-column win loss values (ie, 0=loss, 0.5 = tie, 1 = win) ouputs inline plot representing win/loss squares blue = win, red = loss, grey = tie. Points also also redundantly coded height, wins highest, ties middle, losses bottom. example generates example dataset embeds plot. Now way quickly generate example data, can show ability incrementally add win/losses. Starting 3 games. Please ignore Wins/Loss/Ties columns, simply placeholders. iterating length outcomes list row.  moving 12 games, can see scale unchanged, “empty” points replaced outcomes values present data.  can also switch ‘squares’ instead ‘pills’ changing type argument.  realistic use case seen data nflreadr:","code":"create_input_df <- function(repeats = 3){      input_df <- dplyr::tibble(     team = c(\"A1\", \"B2\", \"C3\", \"C4\"),     Wins = c(3, 2, 1, 1),     Losses = c(2, 3, 2, 4),     Ties = c(0, 0, 2, 0),     outcomes = list(       c(1, .5, 0) %>% rep(each = repeats),       c(0, 1, 0.5) %>% rep(each = repeats),       c(0, 0.5, 1) %>% rep(each = repeats),       c(0.5, 1, 0) %>% rep(each = repeats)     )   )      input_df    }  create_input_df(5) %>%    dplyr::glimpse() #> create_input_df(5) %>%  #>   dplyr::glimpse() #> #> Rows: 4 #> Columns: 5 #> $ team     <chr> \"A1\", \"B2\", \"C3\", \"C4\" #> $ Wins     <dbl> 3, 2, 1, 1 #> $ Losses   <dbl> 2, 3, 2, 4 #> $ Ties     <dbl> 0, 0, 2, 0 #> $ outcomes <list> <1.0, 1.0, 1.0, 1.0, 1.0, 0.5,... create_input_df(1) %>%    gt() %>%    gt_plt_winloss(outcomes, max_wins = 15) %>%    tab_options(data_row.padding = px(2)) create_input_df(4) %>%    gt() %>%    gt_plt_winloss(outcomes, max_wins = 15) %>%    tab_options(data_row.padding = px(2)) create_input_df(4) %>%    gt() %>%    gt_plt_winloss(outcomes, max_wins = 15, type = \"square\") %>%    tab_options(data_row.padding = px(2)) library(dplyr) library(tidyr) library(nflreadr)  games_df <- nflreadr::load_schedules() %>%    filter(season == 2020, game_type == \"REG\") %>%    select(game_id, team_home = home_team, team_away = away_team, result, week) %>%    pivot_longer(contains('team'), names_to = 'home_away', values_to = 'team', names_prefix = 'team_') %>%    mutate(     result = ifelse(home_away == 'home', result, -result),     win = ifelse(result == 0 , 0.5, ifelse(result > 0, 1, 0))   ) %>%    select(week, team, win) %>%    mutate(     team = case_when(       team == 'STL' ~ 'LA',       team == 'OAK' ~ 'LV',       team == 'SD' ~ 'LAC',       T ~ team     )   )  team_df <- nflreadr::load_teams() %>%    select(team_wordmark, team_abbr, team_conf, team_division)  joined_df <- games_df %>%    group_by(team) %>%    summarise(     Wins = length(win[win==1]),     Losses = length(win[win==0]),     outcomes = list(win), .groups = \"drop\") %>%    left_join(team_df, by = c(\"team\" = \"team_abbr\")) %>%    select(team_wordmark, team_conf, team_division, Wins:outcomes)  final_df <- joined_df %>%    filter(team_conf == \"AFC\") %>%    group_by(team_division) %>%    arrange(desc(Wins)) %>%    ungroup() %>%    arrange(team_division)  final_df %>%    gt(groupname_col = \"team_division\") %>%   gt_plt_winloss(outcomes, max_wins = 16) %>%    gt_img_rows(columns = team_wordmark) %>%    gt_theme_538() %>%    tab_header(title = \"2020 Results by Division for the AFC\")"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"fmt_symbol_first","dir":"","previous_headings":"Development version","what":"fmt_symbol_first","title":"Additional features for creating beautiful tables with gt","text":"function allows format columns first row, remaining rows column whitespace added end maintain proper alignment.","code":"library(gtExtras) library(gt)  gtcars %>%   head() %>%   dplyr::select(mfr, year, bdy_style, mpg_h, hp) %>%   dplyr::mutate(mpg_h = rnorm(n = dplyr::n(), mean = 22, sd = 1)) %>%   gt::gt() %>%   gt::opt_table_lines() %>%   fmt_symbol_first(column = mfr, symbol = \"&#x24;\", last_row_n = 6) %>%   fmt_symbol_first(column = year, suffix = \"%\") %>%   fmt_symbol_first(column = mpg_h, symbol = \"&#37;\", decimals = 1) %>%   fmt_symbol_first(hp, symbol = \"&#176;\", suffix = \"F\", symbol_first = TRUE)"},{"path":"https://jthomasmock.github.io/gtExtras/index.html","id":"pad_fn","dir":"","previous_headings":"Development version","what":"pad_fn","title":"Additional features for creating beautiful tables with gt","text":"can use pad_fn() gt::fmt() pad specific columns contain numeric values. use want “decimal align” values column, require printing extra trailing zeroes.","code":"data.frame(x = c(1.2345, 12.345, 123.45, 1234.5, 12345)) %>%   gt() %>%   fmt(fns = function(x){pad_fn(x, nsmall = 4)}) %>%   tab_style(     # MUST USE A MONO-SPACED FONT     style = cell_text(font = google_font(\"Fira Mono\")),     locations = cells_body(columns = x)     )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_badge_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Add badge color — add_badge_color","title":"Add badge color — add_badge_color","text":"Add badge color","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_badge_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add badge color — add_badge_color","text":"","code":"add_badge_color(add_color, add_label, alpha_lvl)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_badge_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add badge color — add_badge_color","text":"add_color color add badge add_label label add badge alpha_lvl alpha level","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_badge_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add badge color — add_badge_color","text":"HTML character","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_pcttile_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dot plot from 0 to 100 — add_pcttile_plot","title":"Create a dot plot from 0 to 100 — add_pcttile_plot","text":"Create dot plot 0 100","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_pcttile_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dot plot from 0 to 100 — add_pcttile_plot","text":"","code":"add_pcttile_plot(data, palette, add_label, width)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_pcttile_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dot plot from 0 to 100 — add_pcttile_plot","text":"data single value used plot point. palette length 3 palette, used highlight high/med/low add_label logical indicating whether add label note. added first last row. width numeric indicating ","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_pcttile_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dot plot from 0 to 100 — add_pcttile_plot","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_point_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dot plot from any range - add_point_plot — add_point_plot","title":"Create a dot plot from any range - add_point_plot — add_point_plot","text":"Create dot plot range - add_point_plot","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_point_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dot plot from any range - add_point_plot — add_point_plot","text":"","code":"add_point_plot(data, palette, add_label, width, vals_range, accuracy)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_point_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dot plot from any range - add_point_plot — add_point_plot","text":"data single value used plot point. palette length 3 palette, used highlight high/med/low add_label logical indicating whether add label note. added first last row. width numeric indicating vals_range vector length two indicating range accuracy number round . Use (e.g.) 0.01 show 2 decimal places precision. NULL, default, uses heuristic ensure breaks minimum number digits needed show difference adjacent values. Applied rescaled data.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_point_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dot plot from any range - add_point_plot — add_point_plot","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_text_img.html","id":null,"dir":"Reference","previous_headings":"","what":"Add text and an image to the left or right of it — add_text_img","title":"Add text and an image to the left or right of it — add_text_img","text":"add_text_img function takes existing gt_tbl object adds user specified text image url specific cell. wrapper raw HTML strings gt::web_image(). Intended used inside header table via gt::tab_header().","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_text_img.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add text and an image to the left or right of it — add_text_img","text":"","code":"add_text_img(text, url, height = 30, left = FALSE)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_text_img.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add text and an image to the left or right of it — add_text_img","text":"text text string added cell. url url resolves image file. height absolute height (px) image table cell. left logical TRUE/FALSE indicating text left (TRUE) right (FALSE)","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_text_img.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add text and an image to the left or right of it — add_text_img","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_text_img.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add text and an image to the left or right of it — add_text_img","text":"2-5","code":""},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/add_text_img.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add text and an image to the left or right of it — add_text_img","text":"","code":"library(gt) title_car <- mtcars %>%   head() %>%   gt() %>%   gt::tab_header(     title = add_text_img(       \"A table about cars made with\",       url = \"https://www.r-project.org/logo/Rlogo.png\"       )     )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/create_sum_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table from a dataframe — create_sum_table","title":"Create a summary table from a dataframe — create_sum_table","text":"Create summary table dataframe","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/create_sum_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table from a dataframe — create_sum_table","text":"","code":"create_sum_table(df)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/create_sum_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table from a dataframe — create_sum_table","text":"df dataframe tibble","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/create_sum_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table from a dataframe — create_sum_table","text":"summary dataframe tibble","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/create_sum_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table from a dataframe — create_sum_table","text":"","code":"if (FALSE) { create_sum_table(iris) #>   # A tibble: 5 × 7 #>   type    name         value       n_missing  Mean Median     SD #>   <chr>   <chr>        <list>          <dbl> <dbl>  <dbl>  <dbl> #> 1 numeric Sepal.Length <dbl [150]>         0  5.84   5.8   0.828 #> 2 numeric Sepal.Width  <dbl [150]>         0  3.06   3     0.436 #> 3 numeric Petal.Length <dbl [150]>         0  3.76   4.35  1.77 #> 4 numeric Petal.Width  <dbl [150]>         0  1.20   1.3   0.762 #> 5 factor  Species      <fct [150]>         0  NA     NA    NA }"},{"path":"https://jthomasmock.github.io/gtExtras/reference/fa_icon_repeat.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat {fontawesome} icons and convert to HTML — fa_icon_repeat","title":"Repeat {fontawesome} icons and convert to HTML — fa_icon_repeat","text":"fa_icon_repeat function takes fontawesome icon repeats n times.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fa_icon_repeat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat {fontawesome} icons and convert to HTML — fa_icon_repeat","text":"","code":"fa_icon_repeat(   name = \"star\",   repeats = 1,   fill = NULL,   fill_opacity = NULL,   stroke = NULL,   stroke_width = NULL,   stroke_opacity = NULL,   height = NULL,   width = NULL,   margin_left = NULL,   margin_right = NULL,   position = NULL,   title = NULL,   a11y = c(\"deco\", \"sem\", \"none\") )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/fa_icon_repeat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat {fontawesome} icons and convert to HTML — fa_icon_repeat","text":"name name Font Awesome icon. short name (e.g., \"npm\", \"drum\", etc.), , full name (e.g., \"fab fa-npm\", \"fas fa-drum\", etc.). names correspond current Version 5 Font Awesome names. list short full names can accessed fa_metadata() function fa_metadata()$icon_names fa_metadata()$icon_names_full. supplying Version 4 icon name, internally translated Version 5 icon name Version 5 icon returned. data frame containing short names changed version 4 (v4_name) version 5 (v5_name) can obtained using fa_metadata()$v4_v5_name_tbl. repeats integer indicating number repeats specific icon/row. fill, fill_opacity fill color icon can set fill. provided default value \"currentColor\" applied SVG fill matches color parent HTML element's color attribute. opacity level SVG fill can controlled decimal value 0 1. stroke, stroke_width, stroke_opacity stroke options allow setting color, width, opacity SVG outline stroke. default, stroke width small \"1px\" size adjustment \"stroke_width\" can useful. \"stroke_opacity\" value can decimal values 0 1 (bounds included). height, width height width style attributes rendered SVG. nothing provided height default value \"1em\" applied. width given, calculated units \"em\" basis icon's SVG \"viewBox\" dimensions. margin_left, margin_right length value margin either left right icon. default, \"auto\" used properties. space needed either side length \"0.2em\" recommended starting point. position value position style attribute. default, \"relative\" used . title option populating SVG 'title' attribute, provides -hover text icon. default, title text given icon. a11y == \"semantic\" title text automatically given rendered icon, however, providing text override . a11y Cases distinguish role icon inform accessibility attributes used. Icons can either \"deco\" (decorative, default case) \"sem\" (semantic). Using \"none\" result accessibility features icon.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fa_icon_repeat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat {fontawesome} icons and convert to HTML — fa_icon_repeat","text":"character string class HTML, representing repeated SVG logos","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fa_icon_repeat.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Repeat {fontawesome} icons and convert to HTML — fa_icon_repeat","text":"2-4","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pad_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Format numeric columns to align at decimal point without trailing zeroes — fmt_pad_num","title":"Format numeric columns to align at decimal point without trailing zeroes — fmt_pad_num","text":"function removes repeating trailing zeroes adds blank white space align decimal point. requires use true monospaced fonts, supplied via gt::google_font() function. wrapper around gt::fmt() gtExtras::pad_fn().","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pad_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format numeric columns to align at decimal point without trailing zeroes — fmt_pad_num","text":"","code":"fmt_pad_num(gt_object, columns, nsmall = 2, gfont = \"Fira Mono\")"},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pad_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format numeric columns to align at decimal point without trailing zeroes — fmt_pad_num","text":"gt_object existing gt table object class gt_tbl columns columns format. Can either series column names provided c(), vector column indices, helper function focused selections. select helper functions : starts_with(), ends_with(), contains(), matches(), one_of(), num_range(), everything(). nsmall max number decimal places round /display gfont complete name font available Google Fonts. fmt_pad_num function requires monospaced font, Google many available fonts.google.com","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pad_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format numeric columns to align at decimal point without trailing zeroes — fmt_pad_num","text":"object class gt_tbl.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pad_num.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Format numeric columns to align at decimal point without trailing zeroes — fmt_pad_num","text":"2-2","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pad_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format numeric columns to align at decimal point without trailing zeroes — fmt_pad_num","text":"","code":"library(gt) padded_tab <- data.frame(numbers = c(1.2345, 12.345, 123.45, 1234.5, 12345)) %>%   gt() %>%   fmt_pad_num(columns = numbers, nsmall = 4)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pct_extra.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to percent and show less than 1% as <1% in grey — fmt_pct_extra","title":"Convert to percent and show less than 1% as <1% in grey — fmt_pct_extra","text":"Convert percent show less 1% <1% grey","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pct_extra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to percent and show less than 1% as <1% in grey — fmt_pct_extra","text":"","code":"fmt_pct_extra(gt_object, columns, ..., scale = 1)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pct_extra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to percent and show less than 1% as <1% in grey — fmt_pct_extra","text":"gt_object existing gt table columns columns affect ... Additional argument passed scales::label_percent() scale number multiply values , defaults 1","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pct_extra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to percent and show less than 1% as <1% in grey — fmt_pct_extra","text":"gt table","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_pct_extra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to percent and show less than 1% as <1% in grey — fmt_pct_extra","text":"","code":"library(gt) pct_tab <- dplyr::tibble(x = c(.001,.05,.008,.1,.2,.5,.9)) %>%   gt::gt() %>%   fmt_pct_extra(x, scale = 100, accuracy=.1)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_symbol_first.html","id":null,"dir":"Reference","previous_headings":"","what":"Aligning first-row text only — fmt_symbol_first","title":"Aligning first-row text only — fmt_symbol_first","text":"experimental function allows apply suffix/symbol first row table, maintain alignment whitespace remaining rows.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_symbol_first.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aligning first-row text only — fmt_symbol_first","text":"","code":"fmt_symbol_first(   gt_object,   column = NULL,   symbol = NULL,   suffix = \"\",   decimals = NULL,   last_row_n = NULL,   symbol_first = FALSE,   scale_by = NULL,   gfont = \"Fira Mono\" )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_symbol_first.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aligning first-row text only — fmt_symbol_first","text":"gt_object existing gt table object class gt_tbl column columns apply color tidyeval symbol HTML code raw character string symbol inserted, optionally suffix suffix add, optionally decimals number decimal places round last_row_n Defining last row apply . function attempt guess proper length, can always hardcode specific length. symbol_first TRUE/FALSE - symbol suffix. scale_by numeric value multiply values . Useful scaling percentages 0 1 0 100. gfont string passed gt::google_font() - defaults \"Fira Mono\" requires Monospaced font alignment purposes. Existing Google Monospaced fonts available : fonts.google.com","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_symbol_first.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aligning first-row text only — fmt_symbol_first","text":"object class gt_tbl.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_symbol_first.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Aligning first-row text only — fmt_symbol_first","text":"2-1","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/fmt_symbol_first.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aligning first-row text only — fmt_symbol_first","text":"","code":"library(gt) fmted_tab <- gtcars %>%   head() %>%     dplyr::select(mfr, year, bdy_style, mpg_h, hp) %>%     dplyr::mutate(mpg_h = rnorm(n = dplyr::n(), mean = 22, sd = 1)) %>%     gt::gt() %>%     gt::opt_table_lines() %>%     fmt_symbol_first(column = mfr, symbol = \"&#x24;\", last_row_n = 6) %>%     fmt_symbol_first(column = year, suffix = \"%\") %>%     fmt_symbol_first(column = mpg_h, symbol = \"&#37;\", decimals = 1) %>%     fmt_symbol_first(hp, symbol = \"&#176;\", suffix = \"F\", symbol_first = TRUE)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/generate_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate pseudorandom dataframes with specific parameters — generate_df","title":"Generate pseudorandom dataframes with specific parameters — generate_df","text":"function small utility create specific length dataframe set number groups, specific mean/sd per group. Note total length dataframe n * n_grps.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/generate_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate pseudorandom dataframes with specific parameters — generate_df","text":"","code":"generate_df(n = 10L, n_grps = 1L, mean = c(10), sd = mean/10, with_seed = NULL)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/generate_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate pseudorandom dataframes with specific parameters — generate_df","text":"n integer indicating number rows per group, default 10 n_grps integer indicating number rows per group, defaults 1 mean number indicating mean randomly generated values, must vector equal length n_grps sd number indicating standard deviation randomly generated values, must vector equal length n_grps with_seed seed make randomization reproducible","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/generate_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate pseudorandom dataframes with specific parameters — generate_df","text":"tibble/dataframe","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/generate_df.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Generate pseudorandom dataframes with specific parameters — generate_df","text":"2-19","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/generate_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate pseudorandom dataframes with specific parameters — generate_df","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union generate_df(   100L,   n_grps = 5,   mean = seq(10, 50, length.out = 5) ) %>%   group_by(grp) %>%   summarise(     mean = mean(values), # mean is approx mean     sd = sd(values),     # sd is approx sd     n = n(),             # each grp is of length n     # showing that the sd default of mean/10 works     `mean/sd` = round(mean / sd, 1)   ) #> # A tibble: 5 × 5 #>   grp    mean    sd     n `mean/sd` #>   <chr> <dbl> <dbl> <int>     <dbl> #> 1 grp-1  9.90 0.948   100      10.4 #> 2 grp-2 19.8  2.05    100       9.7 #> 3 grp-3 30.8  2.95    100      10.5 #> 4 grp-4 40.6  3.98    100      10.2 #> 5 grp-5 49.4  5.14    100       9.6"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gtExtras-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gtExtras: Extending 'gt' for Beautiful HTML Tables — gtExtras-package","title":"gtExtras: Extending 'gt' for Beautiful HTML Tables — gtExtras-package","text":"Provides additional functions creating beautiful tables 'gt'. functions generally wrappers around boilerplate adding opinionated niche capabilities helpers functions.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gtExtras-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gtExtras: Extending 'gt' for Beautiful HTML Tables — gtExtras-package","text":"Maintainer: Thomas Mock j.thomasmock@gmail.com [copyright holder] contributors: Daniel D. Sjoberg danield.sjoberg@gmail.com (ORCID) [contributor]","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_add_divider.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a dividing border to an existing gt table. — gt_add_divider","title":"Add a dividing border to an existing gt table. — gt_add_divider","text":"gt_add_divider function takes existing gt_tbl object adds borders dividers specific columns.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_add_divider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a dividing border to an existing gt table. — gt_add_divider","text":"","code":"gt_add_divider(   gt_object,   columns,   sides = \"right\",   color = \"grey\",   style = \"solid\",   weight = px(2),   include_labels = TRUE )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_add_divider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a dividing border to an existing gt table. — gt_add_divider","text":"gt_object existing gt table object class gt_tbl columns Specific columns apply color , accepts either tidyeval colum names columns position. sides border sides modified. Options include \"left\", \"right\", \"top\", \"bottom\". borders surrounding selected cells, can use `\"\"`` option. color, style, weight border color, style, weight. color can defined color name hexadecimal color code. default color value \"#00FFFFFF\" (black). style can one either \"solid\" (default), \"dashed\", \"dotted\". weight border lines given pixel values (px() helper function useful . default value weight \"1px\". include_labels logical, either TRUE FALSE indicating whether also add dividers column labels.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_add_divider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a dividing border to an existing gt table. — gt_add_divider","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_add_divider.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a dividing border to an existing gt table. — gt_add_divider","text":"","code":"library(gt) basic_divider <- head(mtcars) %>%   gt() %>%   gt_add_divider(columns = \"cyl\", style = \"dashed\")"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_add_divider.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add a dividing border to an existing gt table. — gt_add_divider","text":"2-11","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_badge.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a 'badge' based on values and palette — gt_badge","title":"Add a 'badge' based on values and palette — gt_badge","text":"Add 'badge' based values palette","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_badge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a 'badge' based on values and palette — gt_badge","text":"","code":"gt_badge(gt_object, column, palette = NULL, alpha = 0.2)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_badge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a 'badge' based on values and palette — gt_badge","text":"gt_object existing gt table object column column convert badges, accepts tidyeval palette Name palette string. Must either length 1 vector valid color names/hex values equal length unique levels column (ie 4 names, need 4x colors). Note like specify specific color match specific icon, can also use named vector like: c(\"angle-double-\" = \"#009E73\", \"angle-double-\" = \"#D55E00\",\"sort\" = \"#000000\") alpha numeric indicating alpha/transparency. Range 0 1","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_badge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a 'badge' based on values and palette — gt_badge","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_badge.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a 'badge' based on values and palette — gt_badge","text":"","code":"library(gt) head(mtcars) %>%   dplyr::mutate(cyl = paste(cyl, \"Cyl\")) %>%   gt() %>%   gt_badge(cyl, palette = c(\"4 Cyl\"=\"red\",\"6 Cyl\"=\"blue\",\"8 Cyl\"=\"green\"))"},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a small color box relative to the cell value. — gt_color_box","title":"Add a small color box relative to the cell value. — gt_color_box","text":"Create PFF-style colorboxes gt table. Note rather using gt::fmt_ functions column, can send numeric formatting arguments via .... arguments named passed scales::label_number().","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a small color box relative to the cell value. — gt_color_box","text":"","code":"gt_color_box(   gt_object,   columns,   palette = NULL,   ...,   domain = NULL,   width = 70,   font_weight = \"bold\" )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a small color box relative to the cell value. — gt_color_box","text":"gt_object existing gt table object class gt_tbl columns columns wherein changes cell data colors occur. palette colours colour function values mapped . Can character vector (eg c(\"white\", \"red\") hex colors) named palette {paletteer} package package::palette_name structure. Note 'pff' fill blue -> green -> yellow -> orange -> red palette. ... Additional arguments passed scales::label_number(), primarily used format numbers inside color box domain possible values can mapped. simple numeric range (e.g. c(0, 100)) width width entire coloring area pixels. font_weight string indicating font weight, defaults \"bold\", change \"normal\" default weight.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a small color box relative to the cell value. — gt_color_box","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_box.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a small color box relative to the cell value. — gt_color_box","text":"","code":"library(gt) test_data <- dplyr::tibble(x = letters[1:10],                     y = seq(100, 10, by = -10),                     z = seq(10, 100, by = 10)) color_box_tab <- test_data %>%   gt() %>%   gt_color_box(columns = y, domain = 0:100, palette = \"ggsci::blue_material\") %>%   gt_color_box(columns = z, domain = 0:100,                palette = c(\"purple\", \"lightgrey\", \"green\"))"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_box.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add a small color box relative to the cell value. — gt_color_box","text":"4-3","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add scaled colors according to numeric values or categories/factors — gt_color_rows","title":"Add scaled colors according to numeric values or categories/factors — gt_color_rows","text":"gt_color_rows function takes existing gt_tbl object applies pre-existing palettes {paletteer} package custom palettes defined user. function custom wrapper around gt::data_color(), uses boilerplate code. Basic use simpler data_color().","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add scaled colors according to numeric values or categories/factors — gt_color_rows","text":"","code":"gt_color_rows(   gt_object,   columns,   palette = \"ggsci::red_material\",   direction = 1,   domain = NULL,   pal_type = c(\"discrete\", \"continuous\"),   ... )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add scaled colors according to numeric values or categories/factors — gt_color_rows","text":"gt_object existing gt table object class gt_tbl columns columns wherein changes cell data colors occur. palette colours colour function values mapped direction Either 1 -1. -1 palette reversed. domain possible values can mapped. col_numeric col_bin, can simple numeric range (e.g. c(0, 100)); col_quantile needs representative numeric data; col_factor needs categorical data. NULL, whenever resulting colour function called, x value represent domain. implies function invoked multiple times, encoding values colours may consistent; consistency needed, must provide non-NULL domain. pal_type string indicating palette type (one c(\"discrete\", \"continuous\")) ... Additional arguments passed scales::col_numeric()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add scaled colors according to numeric values or categories/factors — gt_color_rows","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_rows.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add scaled colors according to numeric values or categories/factors — gt_color_rows","text":"","code":"library(gt)  # basic use  basic_use <- mtcars %>%    head(15) %>%    gt() %>%    gt_color_rows(mpg:disp)  # change palette to one that paletteer recognizes  change_pal <- mtcars %>%    head(15) %>%    gt() %>%    gt_color_rows(mpg:disp, palette = \"ggsci::blue_material\")  # change palette to raw values  vector_pal <- mtcars %>%    head(15) %>%    gt() %>%    gt_color_rows(      mpg:disp, palette = c(\"white\", \"green\"))      # could also use palette = c(\"#ffffff\", \"##00FF00\")   # use discrete instead of continuous palette  discrete_pal <- mtcars %>%   head(15) %>%   gt() %>%   gt_color_rows(   cyl, pal_type = \"discrete\",   palette = \"ggthemes::colorblind\", domain = range(mtcars$cyl)     )  # use discrete and manually define range  range_pal <- mtcars %>%    dplyr::select(gear, mpg:hp) %>%    head(15) %>%    gt() %>%    gt_color_rows(    gear, pal_type = \"discrete\", direction = -1,    palette = \"colorblindr::OkabeIto_black\", domain = c(3,4,5))"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_color_rows.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add scaled colors according to numeric values or categories/factors — gt_color_rows","text":"4-2","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_double_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Take data, a gt-generating function, and create a list of two tables — gt_double_table","title":"Take data, a gt-generating function, and create a list of two tables — gt_double_table","text":"gt_double_table function takes data user-supplied function generate two tables list. convert existing gt::gt() code function, can follow approximate pattern: gt_fn <- function(x){gt(x) %>% more_gt_code} function single argument, data supplied directly gt::gt() function. function intended passed directly gt_two_column_layout(), printing viewer, saving .png, returning raw HTML.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_double_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take data, a gt-generating function, and create a list of two tables — gt_double_table","text":"","code":"gt_double_table(data, gt_fn, nrows = NULL, noisy = TRUE)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_double_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take data, a gt-generating function, and create a list of two tables — gt_double_table","text":"data tibble dataframe passed supplied gt_fn gt_fn user-defined function one argument, argument pass data gt::gt() function, supplied data argument. follow pattern gt_function <- function(x) gt(x) %>% more_gt_code.... nrows number rows split , defaults NULL attempt split approximately 50/50 left vs right table. noisy logical indicating whether return warning supplying nrows argument.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_double_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take data, a gt-generating function, and create a list of two tables — gt_double_table","text":"list() two gt tables","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_double_table.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take data, a gt-generating function, and create a list of two tables — gt_double_table","text":"","code":"library(gt) # define your own function my_gt_function <- function(x) {   gt(x) %>%     gtExtras::gt_color_rows(columns = mpg, domain = range(mtcars$mpg)) %>%     tab_options(data_row.padding = px(3)) }  two_tables <- gt_double_table(mtcars, my_gt_function, nrows = 16)  # list of two gt_tbl objects # ready to pass to gtExtras::gt_two_column_layout() str(two_tables, max.level = 1)  #> List of 2 #> $ :List of 16 #> ..- attr(*, \"class\")= chr [1:2] \"gt_tbl\" \"list\" #> $ :List of 16 #> ..- attr(*, \"class\")= chr [1:2] \"gt_tbl\" \"list\""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_double_table.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Take data, a gt-generating function, and create a list of two tables — gt_double_table","text":"2-13","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_duplicate_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Duplicate an existing column in a gt table — gt_duplicate_column","title":"Duplicate an existing column in a gt table — gt_duplicate_column","text":"function takes existing gt table duplicate column. also option specify column ends , appending end column name differentiate .","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_duplicate_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duplicate an existing column in a gt table — gt_duplicate_column","text":"","code":"gt_duplicate_column(   gt_object,   column,   after = dplyr::last_col(),   append_text = \"_dupe\",   dupe_name = NULL )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_duplicate_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duplicate an existing column in a gt table — gt_duplicate_column","text":"gt_object existing gt table object class gt_tbl column column duplicated column place duplicate column append_text text add column name differentiate original column name dupe_name full name \"new\" duplicated column, override append_text","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_duplicate_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duplicate an existing column in a gt table — gt_duplicate_column","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_duplicate_column.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Duplicate an existing column in a gt table — gt_duplicate_column","text":"2-15","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_duplicate_column.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duplicate an existing column in a gt table — gt_duplicate_column","text":"","code":"library(gt) dupe_table <- head(mtcars) %>%   dplyr::select(mpg, disp) %>%   gt() %>%   gt_duplicate_column(mpg, after = disp, append_text = \"2\")"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Add {fontawesome} icons inside a {gt} column. — gt_fa_column","title":"Add {fontawesome} icons inside a {gt} column. — gt_fa_column","text":"gt_fa_column function takes existing gt_tbl object adds specific fontawesome icons based names column . icons colored according palette user supplies, either vector valid colors/hex colors length equal unique levels.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add {fontawesome} icons inside a {gt} column. — gt_fa_column","text":"","code":"gt_fa_column(   gt_object,   column,   ...,   palette = NULL,   align = \"left\",   direction = 1 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add {fontawesome} icons inside a {gt} column. — gt_fa_column","text":"gt_object existing gt table object class gt_tbl column column wherein character strings replaced corresponding {fontawesome} icons. ... Additional arguments passed fontawesome::fa() palette Name palette string. Must either length 1 vector valid color names/hex values equal length unique levels column (ie 4 names, need 4x colors). Note like specify specific color match specific icon, can also use named vector like: c(\"angle-double-\" = \"#009E73\", \"angle-double-\" = \"#D55E00\",\"sort\" = \"#000000\") align Character string indicating alignment column, defaults \"left\" direction direction paletteer palette, either -1 reversed default 1 existing direction.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add {fontawesome} icons inside a {gt} column. — gt_fa_column","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_column.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add {fontawesome} icons inside a {gt} column. — gt_fa_column","text":"","code":"library(gt) fa_cars <- mtcars %>%   head() %>%   dplyr::select(cyl, mpg, am, gear) %>%   dplyr::mutate(man = ifelse(am == 1, \"cog\", \"cogs\")) %>%   gt() %>%   gt_fa_column(man)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_column.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add {fontawesome} icons inside a {gt} column. — gt_fa_column","text":"2-15","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rank_change.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rank change indicators to a gt table — gt_fa_rank_change","title":"Add rank change indicators to a gt table — gt_fa_rank_change","text":"Takes existing gt table converts column integers various types /arrows. Note need specify palette three colors, order , neutral, . Defaults green, grey, purple. 6 supported fa_type, representing various arrows. Note can use font_color = 'match' match palette across arrows text. show_text = FALSE remove text column, resulting colored arrows.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rank_change.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rank change indicators to a gt table — gt_fa_rank_change","text":"","code":"gt_fa_rank_change(   gt_object,   column,   palette = c(\"#1b7837\", \"lightgrey\", \"#762a83\"),   fa_type = c(\"angle-double\", \"arrow\", \"level\", \"chevron\", \"caret\", \"long-arrow-alt\"),   font_color = \"black\",   show_text = TRUE )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rank_change.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rank change indicators to a gt table — gt_fa_rank_change","text":"gt_object existing gt table object column single column like convert rank change indicators. palette character vector length 3. Colors can represented hex values named colors. Colors order -arrow, -change, -arrow, defaults green, grey, purple. fa_type name Fontawesome icon, limited 6 types various arrows. font_color string, indicating color font, can also returned 'match' match font color arrow palette. show_text logical indicating whether show/hide values column.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rank_change.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rank change indicators to a gt table — gt_fa_rank_change","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rank_change.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add rank change indicators to a gt table — gt_fa_rank_change","text":"","code":"rank_table <- dplyr::tibble(x = c(1:3, -1, -2, -5, 0)) %>%   gt::gt() %>%   gt_fa_rank_change(x, font_color = \"match\")"},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rating.html","id":null,"dir":"Reference","previous_headings":"","what":"Add rating ","title":"Add rating ","text":"Add rating \"stars\" gt column","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add rating ","text":"","code":"gt_fa_rating(   gt_object,   column,   max_rating = 5,   ...,   color = \"orange\",   icon = \"star\" )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rating.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add rating ","text":"gt_object existing gt table object class gt_tbl column column wherein numeric values replaced corresponding {fontawesome} icons. max_rating max number icons add, added grey indicate \"missing\" ... Additional arguments passed fontawesome::fa() color color icon, accepts named colors (\"orange\") hex strings. icon icon name, passed fontawesome::fa()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rating.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add rating ","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rating.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add rating ","text":"","code":"library(gt) set.seed(37) rating_table <- mtcars %>%   dplyr::select(mpg:wt) %>%   dplyr::slice(1:5) %>%   dplyr::mutate(rating = sample(1:5, size = 5, TRUE)) %>%   gt() %>%   gt_fa_rating(rating, icon = \"r-project\")"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_rating.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add rating ","text":"2-16","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_repeats.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeat {fontawesome} icons based on an integer. — gt_fa_repeats","title":"Repeat {fontawesome} icons based on an integer. — gt_fa_repeats","text":"gt_fa_repeats function takes existing gt_tbl object adds specific fontawesome cells. icons repeated according integer column contains.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_repeats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeat {fontawesome} icons based on an integer. — gt_fa_repeats","text":"","code":"gt_fa_repeats(   gt_object,   column,   name = NULL,   ...,   palette = NULL,   align = \"left\",   direction = 1 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_repeats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeat {fontawesome} icons based on an integer. — gt_fa_repeats","text":"gt_object existing gt table object class gt_tbl column column wherein integers replaced {fontawesome} icons. name character string indicating name \"fontawesome icon. ... Additional arguments passed fontawesome::fa() palette Name palette string. Must either length 1 vector valid color names/hex values equal length unique levels column (ie 4 names, need 4x colors). align Character string indicating alignment column, defaults \"left\" direction direction paletteer palette, either -1 reversed default 1 existing direction.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_repeats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeat {fontawesome} icons based on an integer. — gt_fa_repeats","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_repeats.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeat {fontawesome} icons based on an integer. — gt_fa_repeats","text":"","code":"library(gt) mtcars[1:5, 1:4] %>%   gt() %>%   gt_fa_repeats(cyl, name = \"car\")"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_fa_repeats.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Repeat {fontawesome} icons based on an integer. — gt_fa_repeats","text":"2-8","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Add color highlighting to a specific column(s) — gt_highlight_cols","title":"Add color highlighting to a specific column(s) — gt_highlight_cols","text":"gt_highlight_cols function takes existing gt_tbl object adds highlighting color cell background specific column(s).","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add color highlighting to a specific column(s) — gt_highlight_cols","text":"","code":"gt_highlight_cols(   gt_object,   columns,   fill = \"#80bcd8\",   alpha = 1,   font_weight = \"normal\" )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add color highlighting to a specific column(s) — gt_highlight_cols","text":"gt_object existing gt table object class gt_tbl columns Specific columns apply color , accepts either tidyeval colum names columns position. fill character string indicating fill color. nothing provided, \"#80bcd8\" (light blue) used default. alpha optional alpha transparency value color single value range 0 (fully transparent) 1 (fully opaque). provided fill color either fully opaque use alpha information color value supplied #RRGGBBAA format. font_weight string number indicating weight font. Can text-based keyword \"normal\", \"bold\", \"lighter\", \"bolder\", , numeric value 1 1000, inclusive. Note variable fonts may support numeric mapping weight.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add color highlighting to a specific column(s) — gt_highlight_cols","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_cols.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add color highlighting to a specific column(s) — gt_highlight_cols","text":"","code":"library(gt) basic_col <- head(mtcars) %>%   gt() %>%   gt_highlight_cols(cyl, fill = \"red\", alpha = 0.5)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_cols.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add color highlighting to a specific column(s) — gt_highlight_cols","text":"2-9","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add color highlighting to a specific row — gt_highlight_rows","title":"Add color highlighting to a specific row — gt_highlight_rows","text":"gt_highlight_rows function takes existing gt_tbl object adds highlighting color cell background specific row. function accepts rows number (logical expression) now.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add color highlighting to a specific row — gt_highlight_rows","text":"","code":"gt_highlight_rows(   gt_object,   columns = gt::everything(),   rows = TRUE,   fill = \"#80bcd8\",   alpha = 0.8,   font_weight = \"bold\",   bold_target_only = FALSE,   target_col = c() )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add color highlighting to a specific row — gt_highlight_rows","text":"gt_object existing gt table object class gt_tbl columns Specific columns apply color , accepts either tidyeval colum names columns position. rows rows apply highlight . Can either tidyeval compliant statement (like cyl == 4), number indicating specific row(s) apply color TRUE indicate rows. fill character string indicating fill color. nothing provided, \"#80bcd8\" (light blue) used default. alpha optional alpha transparency value color single value range 0 (fully transparent) 1 (fully opaque). provided fill color either fully opaque use alpha information color value supplied #RRGGBBAA format. font_weight string number indicating weight font. Can text-based keyword \"normal\", \"bold\", \"lighter\", \"bolder\", , numeric value 1 1000, inclusive. Note variable fonts may support numeric mapping weight. bold_target_only logical TRUE/FALSE indicating whether apply bold specific target_col. must indicate specific column target_col. target_col specific tidyeval column apply bold text , allows normal weight text remaining highlighted columns.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add color highlighting to a specific row — gt_highlight_rows","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_rows.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add color highlighting to a specific row — gt_highlight_rows","text":"","code":"library(gt) basic_use <- head(mtcars[,1:5]) %>%  tibble::rownames_to_column(\"car\") %>%    gt() %>%    gt_highlight_rows(rows = 2, font_weight = \"normal\")  target_bold_column <- head(mtcars[,1:5]) %>%    tibble::rownames_to_column(\"car\") %>%    gt() %>%    gt_highlight_rows(      rows = 5,      fill = \"lightgrey\",      bold_target_only = TRUE,      target_col = car    )"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_highlight_rows.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add color highlighting to a specific row — gt_highlight_rows","text":"2-10","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hulk_col_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply 'hulk' palette to specific columns in a gt table. — gt_hulk_col_numeric","title":"Apply 'hulk' palette to specific columns in a gt table. — gt_hulk_col_numeric","text":"hulk name comes idea diverging purple green theme colorblind safe visually appealing. useful alternative red/green palette purple typically can indicate low \"bad\" value, green can indicate high \"good\" value.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hulk_col_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply 'hulk' palette to specific columns in a gt table. — gt_hulk_col_numeric","text":"","code":"gt_hulk_col_numeric(   gt_object,   columns = NULL,   domain = NULL,   ...,   trim = FALSE )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hulk_col_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply 'hulk' palette to specific columns in a gt table. — gt_hulk_col_numeric","text":"gt_object existing gt table object class gt_tbl columns columns wherein changes cell data colors occur. domain possible values can mapped. col_numeric col_bin, can simple numeric range (e.g. c(0, 100)); col_quantile needs representative numeric data; col_factor needs categorical data. NULL, whenever resulting colour function called, x value represent domain. implies function invoked multiple times, encoding values colours may consistent; consistency needed, must provide non-NULL domain. ... Additional arguments passed scales::col_numeric() trim trim palette give less intense maximal colors","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hulk_col_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply 'hulk' palette to specific columns in a gt table. — gt_hulk_col_numeric","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hulk_col_numeric.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply 'hulk' palette to specific columns in a gt table. — gt_hulk_col_numeric","text":"","code":"library(gt)  # basic use  hulk_basic <- mtcars %>%    head() %>%    gt::gt() %>%    gt_hulk_col_numeric(mpg)   hulk_trim <- mtcars %>%    head() %>%    gt::gt() %>%    # trim gives small range of colors    gt_hulk_col_numeric(mpg:disp, trim = TRUE)   # option to reverse the color palette  hulk_rev <- mtcars %>%    head() %>%    gt::gt() %>%    # trim gives small range of colors    gt_hulk_col_numeric(mpg:disp, reverse = TRUE)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hulk_col_numeric.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Apply 'hulk' palette to specific columns in a gt table. — gt_hulk_col_numeric","text":"4-1","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hyperlink.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a basic hyperlink in a gt table — gt_hyperlink","title":"Add a basic hyperlink in a gt table — gt_hyperlink","text":"lightweight helper add hyperlink, can used throughout gt table.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hyperlink.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a basic hyperlink in a gt table — gt_hyperlink","text":"","code":"gt_hyperlink(text, url)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hyperlink.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a basic hyperlink in a gt table — gt_hyperlink","text":"text text displayed hyperlink url url hyperlink","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_hyperlink.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a basic hyperlink in a gt table — gt_hyperlink","text":"HTML text","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Create circular border around an image — gt_img_circle","title":"Create circular border around an image — gt_img_circle","text":"Create circular border around image","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create circular border around an image — gt_img_circle","text":"","code":"gt_img_circle(   gt_object,   column,   height = 25,   border_color = \"black\",   border_weight = 1.5 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create circular border around an image — gt_img_circle","text":"gt_object existing gt object column column apply transformation height number indicating height image pixels. border_color color circular border, can either single value ie (white #FF0000) vector lenght vector equal number rows. border_weight number indicating weight border pixels.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create circular border around an image — gt_img_circle","text":"gt object","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_circle.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create circular border around an image — gt_img_circle","text":"library(gt) gt_img_tab <- dplyr::tibble( x = 1:4, names = c(\"Rich Iannone\",  \"Katie Masiello\", \"Tom Mock\",\"Hadley Wickham\"), img = c( \"https://pbs.twimg.com/profile_images/961326215792533504/Ih6EsvtF_400x400.jpg\", \"https://pbs.twimg.com/profile_images/1471188460220260354/rHhoIXkZ_400x400.jpg\", \"https://pbs.twimg.com/profile_images/1467219661121064965/Lfondr9M_400x400.jpg\", \"https://pbs.twimg.com/profile_images/905186381995147264/7zKAG5sY_400x400.jpg\" ) ) %>% gt() %>% gt_img_circle(img)","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_circle.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Create circular border around an image — gt_img_circle","text":"2-15","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Add local or web images into rows of a gt table — gt_img_rows","title":"Add local or web images into rows of a gt table — gt_img_rows","text":"gt_img_rows function takes existing gt_tbl object converts filenames urls images inline images. wrapper around gt::text_transform() + gt::web_image()/gt::local_image() necessary boilerplate already applied.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add local or web images into rows of a gt table — gt_img_rows","text":"","code":"gt_img_rows(gt_object, columns, img_source = \"web\", height = 30)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add local or web images into rows of a gt table — gt_img_rows","text":"gt_object existing gt table object class gt_tbl columns columns wherein changes cell data colors occur. img_source string, specifying either \"local\" \"web\" source images. height absolute height (px) image table cell.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add local or web images into rows of a gt table — gt_img_rows","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add local or web images into rows of a gt table — gt_img_rows","text":"","code":"library(gt) teams <- \"https://github.com/nflverse/nflfastR-data/raw/master/teams_colors_logos.rds\" team_df <- readRDS(url(teams))   logo_table <- team_df %>%    dplyr::select(team_wordmark, team_abbr, logo = team_logo_espn, team_name:team_conf) %>%    head() %>%    gt() %>%    gt_img_rows(columns = team_wordmark, height = 25) %>%    gt_img_rows(columns = logo, img_source = \"web\", height = 30) %>%    tab_options(data_row.padding = px(1))"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_img_rows.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add local or web images into rows of a gt table — gt_img_rows","text":"2-7","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the underlying data, arranged by the internal index — gt_index","title":"Return the underlying data, arranged by the internal index — gt_index","text":"utility function extract underlying data gt table. can use saved gt table, pipe (%>%) even within gt functions (eg tab_style()). defaults returning column indicated vector, can work values. Typically used logical statements affect one column based values specified secondary column. Alternatively, can extract entire ordered data according internal index tibble. allows even complex steps based multiple indices.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the underlying data, arranged by the internal index — gt_index","text":"","code":"gt_index(gt_object, column, as_vector = TRUE)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the underlying data, arranged by the internal index — gt_index","text":"gt_object existing gt table object column column name intend extract, accepts tidyeval semantics (ie mpg instead \"mpg\") as_vector logical indicating whether like just column indicated vector, entire dataframe","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the underlying data, arranged by the internal index — gt_index","text":"vector tibble","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_index.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Return the underlying data, arranged by the internal index — gt_index","text":"2-20","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the underlying data, arranged by the internal index — gt_index","text":"","code":"library(gt)  # This is a key step, as gt will create the row groups # based on first observation of the unique row items # this sampling will return a row-group order for cyl of 6,4,8  set.seed(1234) sliced_data <- mtcars %>%   dplyr::group_by(cyl) %>%   dplyr::slice_head(n = 3) %>%   dplyr::ungroup() %>%   # randomize the order   dplyr::slice_sample(n = 9)  # not in \"order\" yet sliced_data$cyl #> [1] 6 6 6 4 8 4 8 8 4  # But unique order of 6,4,8 unique(sliced_data$cyl) #> [1] 6 4 8  # creating a standalone basic table test_tab <- sliced_data %>%   gt(groupname_col = \"cyl\")  # can style a specific column based on the contents of another column tab_out_styled <- test_tab %>%   tab_style(locations = cells_body(mpg, rows = gt_index(., am) == 0),             style = cell_fill(\"red\")   )  # OR can extract the underlying data in the \"correct order\" # according to the internal gt structure, ie arranged by group # by cylinder, 6,4,8 gt_index(test_tab, mpg, as_vector = FALSE) #> # A tibble: 9 × 11 #>     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #> 2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #> 3  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #> 4  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #> 5  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #> 6  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #> 8  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #> 9  16.4     8  276.   180  3.07  4.07  17.4     0     0     3     3  # note that the order of the index data is # not equivalent to the order of the input data # however all the of the rows still match sliced_data #> # A tibble: 9 × 11 #>     mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #> 1  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #> 2  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #> 3  21       6  160    110  3.9   2.62  16.5     0     1     4     4 #> 4  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #> 5  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #> 6  24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #> 7  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #> 8  16.4     8  276.   180  3.07  4.07  17.4     0     0     3     3 #> 9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_label_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a simple table with column names and matching labels — gt_label_details","title":"Add a simple table with column names and matching labels — gt_label_details","text":"Add simple table column names matching labels","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_label_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a simple table with column names and matching labels — gt_label_details","text":"","code":"gt_label_details(label, content, names = c(\"Column\", \"Description\"))"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_label_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a simple table with column names and matching labels — gt_label_details","text":"label string representing label details expansion section. content named list wide data.frame 2 rows names string indicating name two columns inside details tag","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_label_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a simple table with column names and matching labels — gt_label_details","text":"HTML text","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge and stack text from two columns in gt — gt_merge_stack","title":"Merge and stack text from two columns in gt — gt_merge_stack","text":"gt_merge_stack() function takes existing gt table merges column 1 column 2, stacking column 1's text top column 2's. Top text caps black bold text, lower text smaller dark grey.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge and stack text from two columns in gt — gt_merge_stack","text":"","code":"gt_merge_stack(   gt_object,   col1,   col2,   palette = c(\"black\", \"grey\"),   ...,   small_cap = TRUE,   font_size = c(\"14px\", \"10px\"),   font_weight = c(\"bold\", \"bold\") )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge and stack text from two columns in gt — gt_merge_stack","text":"gt_object existing gt table object class gt_tbl col1 column stack top. converted caps, black bold text. col2 column merge place . smaller dark grey. palette colors text, first color top , ie col1 second color bottom, ie col2. Defaults c(\"black\",\"grey\"). information built-color names, see colors(). ... Arguments passed scales::col2hcl h Hue, [0, 360] c Chroma, [0, 100] l Luminance, [0, 100] alpha Alpha, [0, 1]. small_cap logical indicating whether use 'small-cap' top line text font_size string length 2 indicating font-size px top bottom text font_weight string length 2 indicating 'font-weight' top bottom text. Must one 'bold', 'normal', 'lighter'","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge and stack text from two columns in gt — gt_merge_stack","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge and stack text from two columns in gt — gt_merge_stack","text":"","code":"library(gt) teams <- \"https://github.com/nflverse/nflfastR-data/raw/master/teams_colors_logos.rds\" team_df <- readRDS(url(teams))  stacked_tab <- team_df %>%  dplyr::select(team_nick, team_abbr, team_conf, team_division, team_wordmark) %>%  head(8) %>%  gt(groupname_col = \"team_conf\") %>%  gt_merge_stack(col1 = team_nick, col2 = team_division) %>%  gt_img_rows(team_wordmark)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_merge_stack.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Merge and stack text from two columns in gt — gt_merge_stack","text":"2-6","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bar plots into rows of a gt table — gt_plt_bar","title":"Add bar plots into rows of a gt table — gt_plt_bar","text":"gt_plt_bar function takes existing gt_tbl object adds horizontal barplots via ggplot2. Note values plotted shared x-axis, vertical black bar added x = zero.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bar plots into rows of a gt table — gt_plt_bar","text":"","code":"gt_plt_bar(   gt_object,   column = NULL,   color = \"purple\",   ...,   keep_column = FALSE,   width = 70,   scale_type = \"none\",   text_color = \"white\" )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add bar plots into rows of a gt table — gt_plt_bar","text":"gt_object existing gt table object class gt_tbl column single column wherein bar plot replace existing data. color character representing color bar, defaults purple. Accepts named color (eg 'purple') hex color. ... Additional arguments passed scales::label_number() scales::label_percent(), depending specified scale_type keep_column TRUE/FALSE logical indicating want keep copy \"plotted\" column raw values next plot .. width integer indicating width plot pixels. scale_type string indicating additional text formatting addition numeric labels plotted bars 'none'. 'none', numbers added bar, \"number\" \"percent\" used, numbers plotted column added bar-label formatted according scales::label_percent() scales::label_number(). text_color string indicating color text scale_type used. Defaults \"white\"","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add bar plots into rows of a gt table — gt_plt_bar","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add bar plots into rows of a gt table — gt_plt_bar","text":"","code":"library(gt) gt_plt_bar_tab <- mtcars %>%   head() %>%   gt() %>%   gt_plt_bar(column = mpg, keep_column = TRUE)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add bar plots into rows of a gt table — gt_plt_bar","text":"3-4","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Add HTML-based bar plots into rows of a gt table — gt_plt_bar_pct","title":"Add HTML-based bar plots into rows of a gt table — gt_plt_bar_pct","text":"gt_plt_bar_pct function takes existing gt_tbl object adds horizontal barplots via native HTML. wrapper around raw HTML strings, gt::text_transform() gt::cols_align(). Note values default normalized percent maximum observed value specified column. can turn values already represent percentage value representing 0-100.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add HTML-based bar plots into rows of a gt table — gt_plt_bar_pct","text":"","code":"gt_plt_bar_pct(   gt_object,   column,   height = 16,   fill = \"purple\",   background = \"#e1e1e1\",   scaled = FALSE )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add HTML-based bar plots into rows of a gt table — gt_plt_bar_pct","text":"gt_object existing gt table object class gt_tbl column column wherein bar plot replace existing data. height number representing vertical height plot pixels. Defaults 16 px. fill character representing fill bar, defaults purple. Accepts named color (eg 'purple') hex color. background character representing background filling 100% mark bar, defaults light grey. Accepts named color (eg 'white') hex color. scaled TRUE/FALSE logical indicating value already scaled percent max (TRUE) needs scaled (FALSE). Defaults FALSE, meaning value divided max value column multiplied 100.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add HTML-based bar plots into rows of a gt table — gt_plt_bar_pct","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_pct.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add HTML-based bar plots into rows of a gt table — gt_plt_bar_pct","text":"","code":"library(gt)  gt_bar_plot_tab <- mtcars %>%    head() %>%    dplyr::select(cyl, mpg) %>%    dplyr::mutate(mpg_pct_max = round(mpg/max(mpg) * 100, digits = 2),                  mpg_scaled = mpg/max(mpg) * 100) %>%    dplyr::mutate(mpg_unscaled = mpg) %>%    gt() %>%    gt_plt_bar_pct(column = mpg_scaled, scaled = TRUE) %>%    gt_plt_bar_pct(column = mpg_unscaled, scaled = FALSE,                   fill = \"blue\", background = \"lightblue\") %>%    cols_align(\"center\", contains(\"scale\")) %>%    cols_width(4 ~ px(125),               5 ~ px(125))"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_pct.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add HTML-based bar plots into rows of a gt table — gt_plt_bar_pct","text":"3-5","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a percent stacked barchart in place of existing data. — gt_plt_bar_stack","title":"Add a percent stacked barchart in place of existing data. — gt_plt_bar_stack","text":"gt_plt_bar_stack function takes existing gt_tbl object converts existing values percent stacked barchart. bar chart represent either 2 3 user-specified values per row, requires list column ahead time. palette labels need equal length. values must either add 100 ie percentage points using position = 'fill', can raw values position = 'stack'. Note labels can controlled via fmt_fn argument scales::label_???() family function.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a percent stacked barchart in place of existing data. — gt_plt_bar_stack","text":"","code":"gt_plt_bar_stack(   gt_object,   column = NULL,   palette = c(\"#ff4343\", \"#bfbfbf\", \"#0a1c2b\"),   labels = c(\"Group 1\", \"Group 2\", \"Group 3\"),   position = \"fill\",   width = 70,   fmt_fn = scales::label_number(scale_cut = cut_short_scale(), trim = TRUE) )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_stack.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a percent stacked barchart in place of existing data. — gt_plt_bar_stack","text":"gt_object existing gt table object class gt_tbl column column wherein percent stacked barchart replace existing data. Note data must represented list numeric values ahead time. palette color palette length 2 3, represented either hex colors (\"#ff4343\") named colors (\"red\"). labels vector strings length 2 3, representing labels bar chart, colored according palette well. position string indicator passed ggplot2 indicating bar percent total \"fill\" stacked raw values \"stack\". width integer representing width bar chart pixels. fmt_fn specific function scales::label_??? family. Defaults scales::label_number()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_stack.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a percent stacked barchart in place of existing data. — gt_plt_bar_stack","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bar_stack.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a percent stacked barchart in place of existing data. — gt_plt_bar_stack","text":"","code":"library(gt) library(dplyr)  ex_df <- dplyr::tibble(   x = c(\"Example 1\",\"Example 1\",         \"Example 1\",\"Example 2\",\"Example 2\",\"Example 2\",         \"Example 3\",\"Example 3\",\"Example 3\",\"Example 4\",\"Example 4\",         \"Example 4\"),   measure = c(\"Measure 1\",\"Measure 2\",               \"Measure 3\",\"Measure 1\",\"Measure 2\",\"Measure 3\",               \"Measure 1\",\"Measure 2\",\"Measure 3\",\"Measure 1\",\"Measure 2\",               \"Measure 3\"),   data = c(30, 20, 50, 30, 30, 40, 30, 40, 30, 30, 50, 20) )   tab_df <- ex_df %>%   group_by(x) %>%   summarise(list_data = list(data))  tab_df  ex_tab <- tab_df %>%   gt() %>%   gt_plt_bar_stack(column = list_data)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bullet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an inline 'bullet chart' in a gt table — gt_plt_bullet","title":"Create an inline 'bullet chart' in a gt table — gt_plt_bullet","text":"Create inline 'bullet chart' gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bullet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an inline 'bullet chart' in a gt table — gt_plt_bullet","text":"","code":"gt_plt_bullet(   gt_object,   column = NULL,   target = NULL,   width = 65,   palette = c(\"grey\", \"red\") )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bullet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an inline 'bullet chart' in a gt table — gt_plt_bullet","text":"gt_object existing gt table object class gt_tbl column column 'bullet chart' replace inline values. target column indicating target values represented vertical line width Width plot pixels palette Color bar target line, defaults c(\"grey\", \"red\"), can use named colors hex colors. Must length two, first color always used bar color.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bullet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an inline 'bullet chart' in a gt table — gt_plt_bullet","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bullet.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an inline 'bullet chart' in a gt table — gt_plt_bullet","text":"","code":"set.seed(37) bullet_tab <- tibble::rownames_to_column(mtcars) %>%  dplyr::select(rowname, cyl:drat, mpg) %>%  dplyr::group_by(cyl) %>%  dplyr::mutate(target_col = mean(mpg)) %>%  dplyr::slice_sample(n = 3) %>%  dplyr::ungroup() %>%  gt::gt() %>%  gt_plt_bullet(column = mpg, target = target_col, width = 45,                palette = c(\"lightblue\", \"black\")) %>%  gt_theme_538()"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_bullet.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Create an inline 'bullet chart' in a gt table — gt_plt_bullet","text":"3-7","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_conf_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a confidence interval around a point — gt_plt_conf_int","title":"Plot a confidence interval around a point — gt_plt_conf_int","text":"Plot confidence interval around point","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_conf_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a confidence interval around a point — gt_plt_conf_int","text":"","code":"gt_plt_conf_int(   gt_object,   column,   ci_columns,   ci = 0.9,   ref_line = NULL,   palette = c(\"black\", \"grey\", \"white\", \"black\"),   width = 45,   text_args = list(accuracy = 1),   text_size = 1.5 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_conf_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a confidence interval around a point — gt_plt_conf_int","text":"gt_object existing gt table column column contains mean sample. can either single number per row, calculated values ahead time, list values want calculate confidence intervals. ci_columns Optional columns representing left/right confidence intervals sample. ci confidence interval, representing percentage, ie 0.9 represents 10-90 two tails. ref_line number indicating place reference line x-axis. palette vector color strings exactly length 4. colors represent central point, color range, color stroke around central point, color text, specific order. width number indicating width plot \"mm\", defaults 45. text_args list named arguments. Optional text arguments passed list scales::label_number. text_size number indicating size text indicators plot. Defaults 1.5. Can also set 0 \"remove\" text .","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_conf_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a confidence interval around a point — gt_plt_conf_int","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_conf_int.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a confidence interval around a point — gt_plt_conf_int","text":"","code":"# gtExtras can calculate basic conf int # using confint() function  ci_table <- generate_df(   n = 50, n_grps = 3,   mean = c(10, 15, 20), sd = c(10, 10, 10),   with_seed = 37 ) %>%   dplyr::group_by(grp) %>%   dplyr::summarise(     n = dplyr::n(),     avg = mean(values),     sd = sd(values),     list_data = list(values)   ) %>%   gt::gt() %>%   gt_plt_conf_int(list_data, ci = 0.9)  # You can also provide your own values # based on your own algorithm/calculations pre_calc_ci_tab <- dplyr::tibble(   mean = c(12, 10), ci1 = c(8, 5), ci2 = c(16, 15),   ci_plot = c(12, 10) ) %>%   gt::gt() %>%   gt_plt_conf_int(     ci_plot, c(ci1, ci2),     palette = c(\"red\", \"lightgrey\", \"black\", \"red\")     )"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_conf_int.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Plot a confidence interval around a point — gt_plt_conf_int","text":"3-10","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Add distribution plots into rows of a gt table — gt_plt_dist","title":"Add distribution plots into rows of a gt table — gt_plt_dist","text":"gt_plt_dist function takes existing gt_tbl object adds summary distribution sparklines via ggplot2. Note sparklines limited density, histogram, boxplot rug/strip charts. wanting plot traditional sparklines, can use gtExtras::gt_plt_sparkline().","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add distribution plots into rows of a gt table — gt_plt_dist","text":"","code":"gt_plt_dist(   gt_object,   column,   type = \"density\",   fig_dim = c(5, 30),   line_color = \"black\",   fill_color = \"grey\",   bw = NULL,   trim = FALSE,   same_limit = TRUE )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add distribution plots into rows of a gt table — gt_plt_dist","text":"gt_object existing gt table object class gt_tbl column column wherein sparkline plot replace existing data. Note data must represented list numeric values ahead time. type string indicating type plot generate, accepts \"boxplot\", \"histogram\", \"rug_strip\" \"density\". fig_dim vector two numbers indicating height/width plot mm DPI 25.4, defaults c(5,30) line_color Color line, defaults \"black\". Accepts named color (eg 'blue') hex color. fill_color Color fill histograms/density plots, defaults \"grey\". Accepts named color (eg 'blue') hex color. bw bandwidth binwidth, passed density() ggplot2::geom_histogram(). type = \"density\", bw passed bw argument, type = \"histogram\", bw passed binwidth argument. trim logical indicating whether trim values type = \"density\" slight expansion beyond observable range. Can help long tails density plots. same_limit logical indicating plots use axis range (TRUE) individual axis ranges (FALSE).","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add distribution plots into rows of a gt table — gt_plt_dist","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dist.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add distribution plots into rows of a gt table — gt_plt_dist","text":"","code":"library(gt)  gt_sparkline_tab <- mtcars %>%     dplyr::group_by(cyl) %>%     # must end up with list of data for each row in the input dataframe     dplyr::summarize(mpg_data = list(mpg), .groups = \"drop\") %>%     gt() %>%     gt_plt_dist(mpg_data)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dist.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add distribution plots into rows of a gt table — gt_plt_dist","text":"1-4","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dot.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a color dot and thin bar chart to a table — gt_plt_dot","title":"Add a color dot and thin bar chart to a table — gt_plt_dot","text":"function takes data column categorical column adds colored dot colored dot categorical column. can supply specific palette palette {paletteer} package.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a color dot and thin bar chart to a table — gt_plt_dot","text":"","code":"gt_plt_dot(   gt_object,   column,   category_column,   palette = NULL,   max_value = NULL )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a color dot and thin bar chart to a table — gt_plt_dot","text":"gt_object existing gt table object class gt_tbl column column supplies values create inline bar plot category_column category column, colored dot bar added palette colors color function values mapped . Can character vector (eg c(\"white\", \"red\") hex colors) named palette {paletteer} package. max_value single numeric value indicating max value, left NULL range column values used","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a color dot and thin bar chart to a table — gt_plt_dot","text":"gt_tbl","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_dot.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a color dot and thin bar chart to a table — gt_plt_dot","text":"","code":"library(gt) dot_bar_tab <- mtcars %>%   head() %>%   dplyr::mutate(cars = sapply(strsplit(rownames(.),\" \"), `[`, 1)) %>%   dplyr::select(cars, mpg, disp) %>%   gt() %>%   gt_plt_dot(disp, cars, palette = \"ggthemes::fivethirtyeight\") %>%   cols_width(cars ~ px(125))"},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_percentile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a dot plot for percentiles — gt_plt_percentile","title":"Create a dot plot for percentiles — gt_plt_percentile","text":"Creates percentile dot plot row. Can used alternative 0 100% bar plot. Allows scaling values well accepts vector colors range values.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_percentile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a dot plot for percentiles — gt_plt_percentile","text":"","code":"gt_plt_percentile(   gt_object,   column,   palette = c(\"#007ad6\", \"#f0f0f0\", \"#f72e2e\"),   width = 25,   scale = 1 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_percentile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a dot plot for percentiles — gt_plt_percentile","text":"gt_object existing gt table column column transform percentile dot plot. Accepts tidyeval. values must end 0 100. palette vector strings length 3. Defaults c('blue', 'lightgrey', 'red') hex c(\"#007ad6\", \"#f0f0f0\", \"#f72e2e\") width numeric, indicating width plot mm, defaults 25 scale number multiply/scale values column . Defaults 1, can also 100 decimals.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_percentile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a dot plot for percentiles — gt_plt_percentile","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_percentile.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a dot plot for percentiles — gt_plt_percentile","text":"","code":"library(gt) dot_plt <- dplyr::tibble(x = c(seq(10, 90, length.out = 5))) %>%   gt() %>%   gt_duplicate_column(x,dupe_name = \"dot_plot\") %>%   gt_plt_percentile(dot_plot)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_percentile.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Create a dot plot for percentiles — gt_plt_percentile","text":"3-8","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_point.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a point plot in place of each value. — gt_plt_point","title":"Create a point plot in place of each value. — gt_plt_point","text":"Creates dot/point plot row. Can used alternative bar plot. Accepts range values, opposed gt_plt_percentile intended used values 0 100.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a point plot in place of each value. — gt_plt_point","text":"","code":"gt_plt_point(   gt_object,   column,   palette = c(\"#007ad6\", \"#f0f0f0\", \"#f72e2e\"),   width = 25,   scale = 1,   accuracy = 1 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a point plot in place of each value. — gt_plt_point","text":"gt_object existing gt table column column transform percentile dot plot. Accepts tidyeval. values must end 0 100. palette vector strings length 3. Defaults c('blue', 'lightgrey', 'red') hex c(\"#007ad6\", \"#f0f0f0\", \"#f72e2e\") width numeric, indicating width plot mm, defaults 25 scale number multiply/scale values column . Defaults 1, can also 100 decimals. accuracy Accuracy number labels plot, passed scales::label_number()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a point plot in place of each value. — gt_plt_point","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_point.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a point plot in place of each value. — gt_plt_point","text":"","code":"point_tab <- dplyr::tibble(x = c(seq(1.2e6, 2e6, length.out = 5))) %>%   gt::gt() %>%   gt_duplicate_column(x,dupe_name = \"point_plot\") %>%   gt_plt_point(point_plot, accuracy = .1, width = 25) %>%   gt::fmt_number(x, suffixing = TRUE, decimals = 1)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_point.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Create a point plot in place of each value. — gt_plt_point","text":"3-9","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_sparkline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add sparklines into rows of a gt table — gt_plt_sparkline","title":"Add sparklines into rows of a gt table — gt_plt_sparkline","text":"gt_plt_sparkline function takes existing gt_tbl object adds sparklines via ggplot2. Note rather plot summary distributions (ie density/histograms) can instead use: gtExtras::gt_plt_dist()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_sparkline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add sparklines into rows of a gt table — gt_plt_sparkline","text":"","code":"gt_plt_sparkline(   gt_object,   column,   type = \"default\",   fig_dim = c(5, 30),   palette = c(\"black\", \"black\", \"purple\", \"green\", \"lightgrey\"),   same_limit = TRUE,   label = TRUE )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_sparkline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add sparklines into rows of a gt table — gt_plt_sparkline","text":"gt_object existing gt table object class gt_tbl column column wherein sparkline plot replace existing data. Note data must represented list numeric values ahead time. type string indicating type plot generate, accepts \"default\", \"shaded\", \"ref_median\", 'ref_mean', \"ref_iqr\", \"ref_last\" fig_dim vector two numbers indicating height/width plot mm DPI 25.4, defaults c(5,30) palette character string indicating colors various components. Order matters, palette = sparkline color, final value color, range color low, range color high, 'type' color (eg shading reference lines). same_limit logical indicating plots use axis range (TRUE) individual axis ranges (FALSE). label logical indicating whether sparkline numeric label end plot.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_sparkline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add sparklines into rows of a gt table — gt_plt_sparkline","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_sparkline.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add sparklines into rows of a gt table — gt_plt_sparkline","text":"","code":"library(gt)  gt_sparkline_tab <- mtcars %>%     dplyr::group_by(cyl) %>%     # must end up with list of data for each row in the input dataframe     dplyr::summarize(mpg_data = list(mpg), .groups = \"drop\") %>%     gt() %>%     gt_plt_sparkline(mpg_data)"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_sparkline.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add sparklines into rows of a gt table — gt_plt_sparkline","text":"1-4","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table from a dataframe — gt_plt_summary","title":"Create a summary table from a dataframe — gt_plt_summary","text":"Create summary table dataframe inline histograms area bar charts. Inspired Observable team observablehq/SummaryTable function: https://observablehq.com/d/d8d2929832202050","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table from a dataframe — gt_plt_summary","text":"","code":"gt_plt_summary(df, title = NULL)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table from a dataframe — gt_plt_summary","text":"df dataframe tibble title character string used table title","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table from a dataframe — gt_plt_summary","text":"gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_summary.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table from a dataframe — gt_plt_summary","text":"Create summary table data.frame tibble.","code":"gt_plt_summary(datasets::ChickWeight)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_winloss.html","id":null,"dir":"Reference","previous_headings":"","what":"Add win loss point plot into rows of a gt table — gt_plt_winloss","title":"Add win loss point plot into rows of a gt table — gt_plt_winloss","text":"gt_plt_winloss function takes existing gt_tbl object adds squares specific color vertical position based wins/losses. wrapper around gt::text_transform(). column chosen must list-column seen example code. column also contain values 0 (loss), 0.5 (tie), 1 (win).","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_winloss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add win loss point plot into rows of a gt table — gt_plt_winloss","text":"","code":"gt_plt_winloss(   gt_object,   column,   max_wins = 17,   palette = c(\"#013369\", \"#D50A0A\", \"gray\"),   type = \"pill\",   width = max_wins/0.83 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_winloss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add win loss point plot into rows of a gt table — gt_plt_winloss","text":"gt_object existing gt table object class gt_tbl column column wherein winloss plot replace existing data. Note data must represented list numeric values ahead time. max_wins integer indicating max possible wins, used add padding total wins/losses observed less max. useful mid-season reporting. Defaults red, blue, grey palette. palette character vector length 3, specifying colors win, loss, tie exact order. type character string representing type plot, either 'pill' 'square' width numeric indicating width plot mm, can help larger datasets data points overlapping.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_winloss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add win loss point plot into rows of a gt table — gt_plt_winloss","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_winloss.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add win loss point plot into rows of a gt table — gt_plt_winloss","text":"","code":"#' library(gt)  set.seed(37) data_in <- dplyr::tibble(   grp = rep(c(\"A\", \"B\", \"C\"), each = 10),   wins = sample(c(0,1,.5), size = 30, prob = c(0.45, 0.45, 0.1), replace = TRUE) ) %>%   dplyr::group_by(grp) %>%   dplyr::summarize(wins=list(wins), .groups = \"drop\")  data_in  win_table <- data_in %>%   gt() %>%   gt_plt_winloss(wins)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_plt_winloss.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add win loss point plot into rows of a gt table — gt_plt_winloss","text":"3-1","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_538.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply FiveThirtyEight theme to a gt table — gt_theme_538","title":"Apply FiveThirtyEight theme to a gt table — gt_theme_538","text":"Apply FiveThirtyEight theme gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_538.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply FiveThirtyEight theme to a gt table — gt_theme_538","text":"","code":"gt_theme_538(gt_object, ...)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_538.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply FiveThirtyEight theme to a gt table — gt_theme_538","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_538.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply FiveThirtyEight theme to a gt table — gt_theme_538","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_538.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply FiveThirtyEight theme to a gt table — gt_theme_538","text":"","code":"library(gt) themed_tab <- head(mtcars) %>%   gt() %>%   gt_theme_538()"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_538.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Apply FiveThirtyEight theme to a gt table — gt_theme_538","text":"1-1","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dark.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dark theme to a gt table — gt_theme_dark","title":"Apply dark theme to a gt table — gt_theme_dark","text":"Apply dark theme gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dark theme to a gt table — gt_theme_dark","text":"","code":"gt_theme_dark(gt_object, ...)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dark theme to a gt table — gt_theme_dark","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dark theme to a gt table — gt_theme_dark","text":"object class gt_tbl.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dark.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Apply dark theme to a gt table — gt_theme_dark","text":"1-6","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dark.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dark theme to a gt table — gt_theme_dark","text":"","code":"library(gt) dark_tab <- head(mtcars) %>%   gt() %>%   gt_theme_dark() %>%   tab_header(title = \"Dark mode table\")"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dot_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply dot matrix theme to a gt table — gt_theme_dot_matrix","title":"Apply dot matrix theme to a gt table — gt_theme_dot_matrix","text":"Apply dot matrix theme gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dot_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply dot matrix theme to a gt table — gt_theme_dot_matrix","text":"","code":"gt_theme_dot_matrix(gt_object, ..., color = \"#b5dbb6\")"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dot_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply dot matrix theme to a gt table — gt_theme_dot_matrix","text":"gt_object existing gt table object class gt_tbl ... Additional arguments passed gt::tab_options() color string indicating color row striping, defaults light green. Accepts either named colors hex colors.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dot_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply dot matrix theme to a gt table — gt_theme_dot_matrix","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_dot_matrix.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply dot matrix theme to a gt table — gt_theme_dot_matrix","text":"","code":"library(gt) themed_tab <- head(mtcars) %>%   gt() %>%   gt_theme_dot_matrix() %>%   tab_header(title = \"Styled like dot matrix printer paper\")"},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_espn.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply ESPN theme to a gt table — gt_theme_espn","title":"Apply ESPN theme to a gt table — gt_theme_espn","text":"Apply ESPN theme gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_espn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply ESPN theme to a gt table — gt_theme_espn","text":"","code":"gt_theme_espn(gt_object, ...)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_espn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply ESPN theme to a gt table — gt_theme_espn","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_espn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply ESPN theme to a gt table — gt_theme_espn","text":"object class gt_tbl.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_espn.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Apply ESPN theme to a gt table — gt_theme_espn","text":"1-2","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_espn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply ESPN theme to a gt table — gt_theme_espn","text":"","code":"library(gt) themed_tab <- head(mtcars) %>%   gt() %>%   gt_theme_espn()"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Excel-style theme to an existing gt table — gt_theme_excel","title":"Apply Excel-style theme to an existing gt table — gt_theme_excel","text":"Apply Excel-style theme existing gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Excel-style theme to an existing gt table — gt_theme_excel","text":"","code":"gt_theme_excel(gt_object, ..., color = \"lightgrey\")"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Excel-style theme to an existing gt table — gt_theme_excel","text":"gt_object existing gt table object class gt_tbl ... Additional arguments passed gt::tab_options() color string indicating color row striping, defaults light gray Accepts either named colors hex colors.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Excel-style theme to an existing gt table — gt_theme_excel","text":"object class gt_tbl.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_excel.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Apply Excel-style theme to an existing gt table — gt_theme_excel","text":"1-7","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_excel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Excel-style theme to an existing gt table — gt_theme_excel","text":"","code":"library(gt) themed_tab <- head(mtcars) %>%   gt() %>%   gt_theme_excel() %>%   tab_header(title = \"Styled like your old pal, Excel\")"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_guardian.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Guardian theme to a gt table — gt_theme_guardian","title":"Apply Guardian theme to a gt table — gt_theme_guardian","text":"Apply Guardian theme gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_guardian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Guardian theme to a gt table — gt_theme_guardian","text":"","code":"gt_theme_guardian(gt_object, ...)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_guardian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Guardian theme to a gt table — gt_theme_guardian","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_guardian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Guardian theme to a gt table — gt_theme_guardian","text":"object class gt_tbl.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_guardian.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Apply Guardian theme to a gt table — gt_theme_guardian","text":"1-4","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_guardian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Guardian theme to a gt table — gt_theme_guardian","text":"","code":"library(gt) themed_tab <- head(mtcars) %>%   gt() %>%   gt_theme_guardian()"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_nytimes.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply NY Times theme to a gt table — gt_theme_nytimes","title":"Apply NY Times theme to a gt table — gt_theme_nytimes","text":"Apply NY Times theme gt table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_nytimes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply NY Times theme to a gt table — gt_theme_nytimes","text":"","code":"gt_theme_nytimes(gt_object, ...)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_nytimes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply NY Times theme to a gt table — gt_theme_nytimes","text":"gt_object existing gt table object class gt_tbl ... Optional additional arguments gt::table_options()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_nytimes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply NY Times theme to a gt table — gt_theme_nytimes","text":"object class gt_tbl.","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_nytimes.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Apply NY Times theme to a gt table — gt_theme_nytimes","text":"1-3","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_nytimes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply NY Times theme to a gt table — gt_theme_nytimes","text":"","code":"library(gt) nyt_tab <- head(mtcars) %>%   gt() %>%   gt_theme_nytimes() %>%   tab_header(title = \"Table styled like the NY Times\")"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_pff.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a table theme like PFF — gt_theme_pff","title":"Apply a table theme like PFF — gt_theme_pff","text":"Apply table theme like PFF","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_pff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a table theme like PFF — gt_theme_pff","text":"","code":"gt_theme_pff(gt_object, ..., divider, spanners, rank_col)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_pff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a table theme like PFF — gt_theme_pff","text":"gt_object existing gt_tbl object ... Additional arguments passed gt::tab_options() divider column name add divider left - accepts tidy-eval column names. spanners Character string indicates names specific spanners created gt::tab_spanner(). rank_col column name add grey background . Accepts tidy-eval column names.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_pff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a table theme like PFF — gt_theme_pff","text":"gt_tbl","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_theme_pff.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a table theme like PFF — gt_theme_pff","text":"","code":"library(gt)  out_df <- tibble::tribble(    ~rank,            ~player, ~jersey, ~team,  ~g, ~pass, ~pr_snaps, ~rsh_pct, ~prp, ~prsh,    1L, \"Trey Hendrickson\",    \"91\", \"CIN\", 16,  495,      454,     91.7, 10.8,  83.9,    2L,        \"T.J. Watt\",    \"90\", \"PIT\", 15,  461,      413,     89.6, 10.7,  90.6,    3L,      \"Rashan Gary\",    \"52\",  \"GB\", 16,  471,      463,     98.3, 10.4,  88.9,    4L,      \"Maxx Crosby\",    \"98\",  \"LV\", 17,  599,      597,     99.7,   10,  91.8,    5L,    \"Matthew Judon\",    \"09\",  \"NE\", 17,  510,      420,     82.4,  9.7,  73.2,    6L,    \"Myles Garrett\",    \"95\", \"CLV\", 17,  554,      543,       98,  9.5,  92.7,    7L,  \"Shaquil Barrett\",    \"58\",  \"TB\", 15,  563,      485,     86.1,  9.3,  81.5,    8L,        \"Nick Bosa\",    \"97\",  \"SF\", 17,  529,      525,     99.2,  9.2,  89.8,    9L, \"Marcus Davenport\",    \"92\",  \"NO\", 11,  302,      297,     98.3,  9.1,    82,    10L,       \"Joey Bosa\",    \"97\", \"LAC\", 16,  495,      468,     94.5,  8.9,  90.3,    11L,    \"Robert Quinn\",    \"94\", \"CHI\", 16,  445,      402,     90.3,  8.6,  79.7,    12L,   \"Randy Gregory\",    \"94\", \"DAL\", 12,  315,      308,     97.8,  8.6,  84.4  )  out_df %>%    gt() %>%      tab_spanner(columns = pass:rsh_pct, label = \"snaps\") %>%      tab_spanner(columns = prp:prsh, label = \"grade\") %>%      gt_theme_pff(        spanners = c(\"snaps\", \"grade\"),        divider = jersey, rank_col = rank      ) %>%      gt_color_box(        columns = prsh, domain = c(0, 95), width = 50, accuracy = 0.1,        palette = \"pff\"      ) %>%      cols_label(jersey = \"#\", g = \"#G\", rsh_pct = \"RSH%\") %>%      tab_header(        title = \"Pass Rush Grades\",        subtitle = \"Grades and pass rush stats\"      ) %>%      gt_highlight_cols(columns = prp, fill = \"#e4e8ec\") %>%      tab_style(        style = list(          cell_borders(\"bottom\", \"white\"),          cell_fill(color = \"#393c40\")        ),        locations = cells_column_labels(prp)"},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_two_column_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a two-column layout from a list of two gt tables — gt_two_column_layout","title":"Create a two-column layout from a list of two gt tables — gt_two_column_layout","text":"function takes list() two gt-tables returns two-column layout. expectation user either supplies two tables like list(table1, table2), passes output gt_double_table() function. user indicate whether want return HTML R's viewer output = \"viewer\" \"view\" final output, save disk .png via output = \"save\". Note relatively complex wrapper around htmltools::div() + webshot2::webshot(). Additional arguments can passed webshot2::webshot() automatic output satisfactory. situations, modifying vwidth argument sufficient get desired output, arguments webshot2::webshot() available original name via passed ....","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_two_column_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a two-column layout from a list of two gt tables — gt_two_column_layout","text":"","code":"gt_two_column_layout(   tables = NULL,   output = \"viewer\",   filename = NULL,   path = NULL,   vwidth = 992,   vheight = 600,   ...,   zoom = 2,   expand = 5 )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_two_column_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a two-column layout from a list of two gt tables — gt_two_column_layout","text":"tables list() two tables, typically supplied gt_double_table() output character string indicating desired output, either \"save\" save disk via webshot, \"viewer\" return RStudio Viewer, \"html\" return raw HTML. filename filename table, must contain .png used output = \"save\" path optional path save printed .png, used conjunction filename. vwidth Viewport width. width browser \"window\" passed webshot2::webshot(). vheight Viewport height height browser \"window\" passed webshot2::webshot(). ... Additional arguments passed webshot2::webshot(), used output = \"save\", saving two-column layout tables disk .png. zoom Argument webshot2::webshot(). number specifying zoom factor. zoom factor 2 result twice many pixels vertically horizontally. Note using 2 exactly taking screenshot HiDPI (Retina) device: like increasing zoom 200 doubling height width browser window. differs using HiDPI device web pages load different, higher-resolution images know displayed HiDPI device (using zoom report HiDPI device). expand Argument webshot2::webshot(). numeric vector specifying many pixels expand clipping rectangle . one number, rectangle expanded many pixels sides. four numbers, specify top, right, bottom, left, order. taking screenshots multiple URLs, parameter can also list length url element list containing single number four numbers use corresponding URL.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_two_column_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a two-column layout from a list of two gt tables — gt_two_column_layout","text":"Saves .png disk output = \"save\", returns HTML viewer via htmltools::browsable() output = \"viewer\", returns raw HTML output = \"html\".","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gt_two_column_layout.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a two-column layout from a list of two gt tables — gt_two_column_layout","text":"Add row numbers drop columns   Create two tables, just split half/half   Put tables list pass list gt_two_column_layout function.   better option - write small function, use gt_double_table() generate tables pass gt_double_table()   return viewer   wanted save instead, use code ","code":"library(gt) my_cars <- mtcars %>%   dplyr::mutate(row_n = dplyr::row_number(), .before = mpg) %>%   dplyr::select(row_n, mpg:drat) tab1 <- my_cars %>%   dplyr::slice(1:16) %>%   gt() %>%   gtExtras::gt_color_rows(columns = row_n, domain = 1:32)  tab2 <- my_cars %>%   dplyr::slice(17:32) %>%   gt() %>%   gtExtras::gt_color_rows(columns = row_n, domain = 1:32) listed_tables <- list(tab1, tab2)  gt_two_column_layout(listed_tables) my_gt_fn <- function(x) {   gt(x) %>%     gtExtras::gt_color_rows(columns = row_n, domain = 1:32) }  my_tables <- gt_double_table(my_cars, my_gt_fn, nrows = nrow(my_cars) / 2) gt_two_column_layout(my_tables) gt_two_column_layout(my_tables, output = \"save\",                      filename = \"basic-two-col.png\",                       vwidth = 550, vheight = 620)"},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/gtsave_extra.html","id":null,"dir":"Reference","previous_headings":"","what":"Use webshot2 to save a gt table as a PNG — gtsave_extra","title":"Use webshot2 to save a gt table as a PNG — gtsave_extra","text":"Takes existing HTML content, typically additional HTML including gt table PNG via {webshot2} package.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gtsave_extra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use webshot2 to save a gt table as a PNG — gtsave_extra","text":"","code":"gtsave_extra(data, filename, path = NULL, ..., zoom = 2, expand = 5)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/gtsave_extra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use webshot2 to save a gt table as a PNG — gtsave_extra","text":"data HTML content saved temporarily disk filename name file, end .png path optional path ... Additional arguments webshot2::webshot() zoom number specifying zoom factor. zoom factor 2 result twice many pixels vertically horizontally. Note using 2 exactly taking screenshot HiDPI (Retina) device: like increasing zoom 200 doubling height width browser window. expand numeric vector specifying many pixels expand clipping rectangle . one number, rectangle expanded many pixels sides. four numbers, specify top, right, bottom, left, order.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gtsave_extra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use webshot2 to save a gt table as a PNG — gtsave_extra","text":"Prints HTML content RStudio viewer saves .png file disk","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/gtsave_extra.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Use webshot2 to save a gt table as a PNG — gtsave_extra","text":"2-14","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a circular border around a — img_circle","title":"Create a circular border around a — img_circle","text":"Create circular border around ","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a circular border around a — img_circle","text":"","code":"img_circle(value, height, border_color, border_weight)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a circular border around a — img_circle","text":"value source image height height pixels circle border_color string indicating color border border_weight weight border pixels","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a circular border around a — img_circle","text":"HTML","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Add images as the column label for a table — img_header","title":"Add images as the column label for a table — img_header","text":"Add images column label table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add images as the column label for a table — img_header","text":"","code":"img_header(   label,   img_url,   height = 60,   font_size = 12,   palette = c(\"black\", \"black\") )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add images as the column label for a table — img_header","text":"label string indicating label column. img_url string image url. height number indicating height image pixels. font_size font size label pixels. palette vector two colors, indictating bottom border color text color.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add images as the column label for a table — img_header","text":"HTML string","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/img_header.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add images as the column label for a table — img_header","text":"","code":"library(gt) dplyr::tibble(   x = 1:5, y = 6:10 ) %>%   gt() %>%   cols_label(     x = img_header(       \"Luka Doncic\",       \"https://secure.espn.com/combiner/i?img=/i/headshots/nba/players/full/3945274.png\",       height = 60,       font_size = 14     )   )"},{"path":[]},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/last_row_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get last row id/index even by group — last_row_id","title":"Get last row id/index even by group — last_row_id","text":"Get last row id/index even group","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/last_row_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get last row id/index even by group — last_row_id","text":"","code":"last_row_id(gt_object)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/last_row_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get last row id/index even by group — last_row_id","text":"gt_object existing gt table object class gt_tbl","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/n_decimals.html","id":null,"dir":"Reference","previous_headings":"","what":"Count number of decimals — n_decimals","title":"Count number of decimals — n_decimals","text":"Count number decimals","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/n_decimals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count number of decimals — n_decimals","text":"","code":"n_decimals(x)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/n_decimals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count number of decimals — n_decimals","text":"x value count decimals ","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/n_decimals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count number of decimals — n_decimals","text":"integer","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/pad_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad a vector of numbers to align on the decimal point. — pad_fn","title":"Pad a vector of numbers to align on the decimal point. — pad_fn","text":"helper function adds whitespace numeric values can aligned decimal without requiring additional trailing zeroes. function intended use within gt::fmt() function.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/pad_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad a vector of numbers to align on the decimal point. — pad_fn","text":"","code":"pad_fn(x, nsmall = 2)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/pad_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad a vector of numbers to align on the decimal point. — pad_fn","text":"x vector numbers pad/align decimal point nsmall max number decimal places round /display","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/pad_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad a vector of numbers to align on the decimal point. — pad_fn","text":"Returns vector equal length input vector","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/pad_fn.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Pad a vector of numbers to align on the decimal point. — pad_fn","text":"2-3","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/pad_fn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad a vector of numbers to align on the decimal point. — pad_fn","text":"","code":"library(gt) padded_tab <- data.frame(x = c(1.2345, 12.345, 123.45, 1234.5, 12345)) %>%   gt() %>%   fmt(fns = function(x){pad_fn(x, nsmall = 4)}) %>%   tab_style(     # MUST USE A MONO-SPACED FONT     # https://fonts.google.com/?category=Monospace     style = cell_text(font = google_font(\"Fira Mono\")),     locations = cells_body(columns = x)     )"},{"path":"https://jthomasmock.github.io/gtExtras/reference/plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create inline plots for a summary table — plot_data","title":"Create inline plots for a summary table — plot_data","text":"Create inline plots summary table","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create inline plots for a summary table — plot_data","text":"","code":"plot_data(col, col_name, ...)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create inline plots for a summary table — plot_data","text":"col column data used plotting col_name name column - use reporting warnings ... additional arguments passed scales::label_number()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create inline plots for a summary table — plot_data","text":"svg text encoded HTML","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, all_of, any_of, contains, ends_with, everything, last_col, matches, mutate, num_range, one_of, select, starts_with, vars","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/tab_style_by_grp.html","id":null,"dir":"Reference","previous_headings":"","what":"Add table styling to specific rows by group — tab_style_by_grp","title":"Add table styling to specific rows by group — tab_style_by_grp","text":"tab_style_by_grp function takes existing gt_tbl object styling according group. Currently support styling max()/min() group.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/tab_style_by_grp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add table styling to specific rows by group — tab_style_by_grp","text":"","code":"tab_style_by_grp(gt_object, column, fn, ...)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/tab_style_by_grp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add table styling to specific rows by group — tab_style_by_grp","text":"gt_object existing gt table object class gt_tbl column column using tidy variable name number indicating column styling affect . fn name summarizing function (ie max(), min()) ... Arguments passed tab_style(style = ...)","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/tab_style_by_grp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add table styling to specific rows by group — tab_style_by_grp","text":"object class gt_tbl.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/tab_style_by_grp.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add table styling to specific rows by group — tab_style_by_grp","text":"","code":"library(gt) df_in <- mtcars %>%   dplyr::select(cyl:hp, mpg) %>%   tibble::rownames_to_column() %>%   dplyr::group_by(cyl) %>%   dplyr::slice(1:4) %>%   dplyr::ungroup()  test_tab <- df_in %>%   gt(groupname_col = \"cyl\") %>%   tab_style_by_grp(mpg, fn = max,                    cell_fill(color = \"red\", alpha = 0.5))"},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/tab_style_by_grp.html","id":"function-id","dir":"Reference","previous_headings":"","what":"Function ID","title":"Add table styling to specific rows by group — tab_style_by_grp","text":"2-12","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/reference/with_tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper to add basic tooltip inside a gt table — with_tooltip","title":"A helper to add basic tooltip inside a gt table — with_tooltip","text":"lightweight helper add tooltip, typically used within gt::cols_label().","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/with_tooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper to add basic tooltip inside a gt table — with_tooltip","text":"","code":"with_tooltip(label, tooltip)"},{"path":"https://jthomasmock.github.io/gtExtras/reference/with_tooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper to add basic tooltip inside a gt table — with_tooltip","text":"label label item tooltip tooltip text based tooltip item","code":""},{"path":"https://jthomasmock.github.io/gtExtras/reference/with_tooltip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A helper to add basic tooltip inside a gt table — with_tooltip","text":"HTML text","code":""},{"path":[]},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"0409004-development-version","dir":"Changelog","previous_headings":"","what":"0.4.0.9004","title":"gtExtras (development version)","text":"Refactor gt_index() respect multiple groups - closes Issue #58 - thanks @jmbarbone ! Refactor tab_style_by_grp() respect multiple groups","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"0409003-development-version","dir":"Changelog","previous_headings":"","what":"0.4.0.9003","title":"gtExtras (development version)","text":"Add NA handling gt_plt_conf_int() - closes #52 Update readme content reflect latest documentation Remove use_paletteer argument documentation (inline operation function) Convert &nbsp &nbsp; fmt_symbol_first() fmt_pad_num(), convert tests match Update documentation gt_img_circle() Add gt_theme_pff() Pro Football Focus style tables Add \"pff\" palette option gt_color_box() Add new arguments gt_merge_stack() per issue 53 Bulk update examples sections updated images Remove background color label gt_plt_conf_int() - closes #54 Add gt_index() internals gt_merge_stack() prevent incorrect arrangement grouping data - closes issue #55 Corrected gt_plt_sparkline() cases inline plots weren’t respecting shared limits.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-040","dir":"Changelog","previous_headings":"","what":"gtExtras 0.4.0","title":"gtExtras 0.4.0","text":"CRAN release: 2022-06-09 Prep submit initial CRAN release :fingers-crossed:","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-039","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3.9","title":"gtExtras 0.3.9","text":"Renamed colors arg gt_merge_stack() ‘palette’ Renamed colors arg gt_plt_bullet() ‘palette’ Renamed pal arg gt_plt_sparkline() ‘palette’","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-038","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3.8","title":"gtExtras 0.3.8","text":"Renamed colors argument gt_win_loss() palette Added NA handling fontawesome::fa() functions, ie gt_fa_rank_change(), gt_fa_repeats(), gt_fa_column() Add missing data handling plotting functions Refactor testing use webshot2::webshot() webshot::webshot() Remove gt_sparkline() - functions separated gt_plt_sparkline() gt_plt_dist()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-037","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3.7","title":"gtExtras 0.3.7","text":"Added basic support gt_plt_summary() dates/times. Updated tests gt_plt_summary() include dates/times","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-036","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3.6","title":"gtExtras 0.3.6","text":"Remove use_paletteer arg gt_color_rows() favor hopefully user friendly detection :: Convert gt_color_rows() ‘type’ argument ‘pal_type’ prevent edge-case column named type conflicts paletteer “type” argument per issue #50","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-034","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3.4","title":"gtExtras 0.3.4","text":"Add initial version gt_plt_summary() function, inspired Observable/SummaryTable function. gt_sparkline() removed soon now bstfun/gtsummary longer depending . gt_plt_dist() gt_plt_sparkline() new preferred enhanced versions gt_sparkline(). Add tests gt_plt_summary()","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-033","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3.3","title":"gtExtras 0.3.3","text":"Add webshot2 dependency now ’s CRAN!","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-032","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3.2","title":"gtExtras 0.3.2","text":"Remove scales::scales_label_si() favor scales::label_number(scale_cut = cut_scale_short()) previous function deprecated. Thanks @mrcaseb pointing Issue 48","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-03","dir":"Changelog","previous_headings":"","what":"gtExtras 0.3","title":"gtExtras 0.3","text":"Add Daniel Sjoberg contributor honor major assistance preparation towards CRAN Move past 0.2 release “next stop CRAN”… hopefully Vendor additional unexported functions gt attribution","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-027","dir":"Changelog","previous_headings":"","what":"gtExtras 0.2.7","title":"gtExtras 0.2.7","text":"Bring webshot2 remote dependency suggest minor changes clean R checks, thanks PR great Daniel Sjoberg. Correct internal bug gt_plt_dist() failing plotting integers.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-026","dir":"Changelog","previous_headings":"","what":"gtExtras 0.2.6","title":"gtExtras 0.2.6","text":"Exchange webshot webshot2 enhance capabilities. Note webshot2 GitHub , install via: remotes::install_github(\"rstudio/webshot2\"). solves issue #42.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-025","dir":"Changelog","previous_headings":"","what":"gtExtras 0.2.5","title":"gtExtras 0.2.5","text":"Updated gt_theme_guardian() work zero-length tables per Issue 41","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"gtextras-024","dir":"Changelog","previous_headings":"","what":"gtExtras 0.2.4","title":"gtExtras 0.2.4","text":"Added NEWS.md file track changes package.","code":""},{"path":"https://jthomasmock.github.io/gtExtras/news/index.html","id":"bug-fixes-prior-to-0-2-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes prior to 0.2.4","title":"gtExtras 0.2.4","text":"Use gt_index prevent incorrect ordering rows gt_plt_bar_pct() per StackOverflow report Remove keep_column argument gt_plt_bullet, functionality able achieved gt_duplicate_column() upstream. also solves naming confusion seen issue 37","code":""}]
